<?xml version="1.0"?>
<doc>
    <assembly>
        <name>IdleOfTheAgesRuntime</name>
    </assembly>
    <members>
        <member name="T:IdleOfTheAgesRuntime.App">
            <summary>
            The entry point of the runtime.
            </summary>
        </member>
        <member name="P:IdleOfTheAgesRuntime.App.ServiceLibrary">
            <summary>
            Gets the main service library.
            </summary>
        </member>
        <member name="M:IdleOfTheAgesRuntime.App.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:IdleOfTheAgesRuntime.App"/> class.
            </summary>
        </member>
        <member name="M:IdleOfTheAgesRuntime.App.Initialize(System.Reflection.Assembly[])">
            <summary>
            Initializes the App Assembly.
            </summary>
            <param name="assembliesToInclude">Assemblies to also load with the main assembly.</param>
        </member>
        <member name="M:IdleOfTheAgesRuntime.App.LoadMods(System.String,System.Runtime.Loader.AssemblyLoadContext)">
            <summary>
            Loads all the mods in the provided folder.
            </summary>
            <param name="rootPath">The folder the mods are all in.</param>
            <param name="assemblyLoadContext">The load context to load the mod assemblies with.</param>
            <returns>Whether the loading of the mods contained any errors.</returns>
        </member>
        <member name="M:IdleOfTheAgesRuntime.App.GameLoaded">
            <summary>
            Indicates that the game has been loaded.
            </summary>
        </member>
        <member name="T:IdleOfTheAgesRuntime.Data.ModObject">
            <summary>
            Contains all relevant mod data.
            </summary>
        </member>
        <member name="P:IdleOfTheAgesRuntime.Data.ModObject.Namespace">
            <inheritdoc/>
        </member>
        <member name="P:IdleOfTheAgesRuntime.Data.ModObject.Mod">
            <inheritdoc/>
        </member>
        <member name="P:IdleOfTheAgesRuntime.Data.ModObject.Logger">
            <inheritdoc/>
        </member>
        <member name="P:IdleOfTheAgesRuntime.Data.ModObject.ServiceLibrary">
            <inheritdoc/>
        </member>
        <member name="P:IdleOfTheAgesRuntime.Data.ModObject.ServiceRegistry">
            <inheritdoc/>
        </member>
        <member name="P:IdleOfTheAgesRuntime.Data.ModObject.ModAssembly">
            <inheritdoc/>
        </member>
        <member name="M:IdleOfTheAgesRuntime.Data.ModObject.Init">
            <summary>
            Initializes the Mod Object.
            </summary>
        </member>
        <member name="T:IdleOfTheAgesRuntime.DependencyInjection.DependencyInjector">
            <summary>
            A service that can inject objects with dependencies.
            </summary>
        </member>
        <member name="M:IdleOfTheAgesRuntime.DependencyInjection.DependencyInjector.#ctor(IdleOfTheAgesLib.DependencyInjection.IServiceLibrary)">
            <summary>
            Initializes a new instance of the <see cref="T:IdleOfTheAgesRuntime.DependencyInjection.DependencyInjector"/> class.
            </summary>
            <param name="serviceLibrary">The service library to get the dependencies from.</param>
        </member>
        <member name="M:IdleOfTheAgesRuntime.DependencyInjection.DependencyInjector.InjectDependencies(System.Object)">
            <inheritdoc/>
        </member>
        <member name="T:IdleOfTheAgesRuntime.DependencyInjection.Resolver`1">
            <summary>
            A resolver to resolve a dependency to an instance.
            </summary>
            <typeparam name="TType">The type the resolver resolves for.</typeparam>
        </member>
        <member name="P:IdleOfTheAgesRuntime.DependencyInjection.Resolver`1.Factory">
            <inheritdoc/>
        </member>
        <member name="P:IdleOfTheAgesRuntime.DependencyInjection.Resolver`1.IsSingleton">
            <inheritdoc/>
        </member>
        <member name="M:IdleOfTheAgesRuntime.DependencyInjection.Resolver`1.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:IdleOfTheAgesRuntime.DependencyInjection.Resolver`1"/> class.
            </summary>
            <param name="instanceType">The type this resolver should resolve to.</param>
        </member>
        <member name="M:IdleOfTheAgesRuntime.DependencyInjection.Resolver`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:IdleOfTheAgesRuntime.DependencyInjection.Resolver`1"/> class.
            </summary>
        </member>
        <member name="M:IdleOfTheAgesRuntime.DependencyInjection.Resolver`1.IdleOfTheAgesLib#DependencyInjection#IResolver#Resolve(IdleOfTheAgesLib.DependencyInjection.IServiceLibrary)">
            <inheritdoc/>
        </member>
        <member name="M:IdleOfTheAgesRuntime.DependencyInjection.Resolver`1.Resolve(IdleOfTheAgesLib.DependencyInjection.IServiceLibrary)">
            <inheritdoc/>
        </member>
        <member name="M:IdleOfTheAgesRuntime.DependencyInjection.Resolver`1.ToInstance(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:IdleOfTheAgesRuntime.DependencyInjection.Resolver`1.SetInstanceType(System.Type)">
            <inheritdoc/>
        </member>
        <member name="T:IdleOfTheAgesRuntime.DependencyInjection.ServiceLibrary">
            <summary>
            A library where services that are registered through a <see cref="T:IdleOfTheAgesLib.DependencyInjection.IServiceRegistry"/> can be obtained from.
            </summary>
        </member>
        <member name="M:IdleOfTheAgesRuntime.DependencyInjection.ServiceLibrary.#ctor(IdleOfTheAgesLib.DependencyInjection.IServiceLibrary)">
            <summary>
            Initializes a new instance of the <see cref="T:IdleOfTheAgesRuntime.DependencyInjection.ServiceLibrary"/> class.
            </summary>
            <param name="parent">The parent <see cref="T:IdleOfTheAgesLib.DependencyInjection.IServiceLibrary"/>.</param>
        </member>
        <member name="M:IdleOfTheAgesRuntime.DependencyInjection.ServiceLibrary.Bind(System.Type,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:IdleOfTheAgesRuntime.DependencyInjection.ServiceLibrary.Bind``1(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:IdleOfTheAgesRuntime.DependencyInjection.ServiceLibrary.Get``1(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:IdleOfTheAgesRuntime.DependencyInjection.ServiceLibrary.Get(System.Type,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:IdleOfTheAgesRuntime.DependencyInjection.ServiceLibrary.TryGet``1(``0@,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:IdleOfTheAgesRuntime.DependencyInjection.ServiceLibrary.TryGet(System.Type,System.Object@,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:IdleOfTheAgesRuntime.DependencyInjection.ServiceLibrary.GetAllServiceNames">
            <inheritdoc/>
        </member>
        <member name="M:IdleOfTheAgesRuntime.DependencyInjection.ServiceLibrary.GetAllServices(System.Type)">
            <inheritdoc/>
        </member>
        <member name="M:IdleOfTheAgesRuntime.DependencyInjection.ServiceLibrary.GetAllServices``1">
            <inheritdoc/>
        </member>
        <member name="M:IdleOfTheAgesRuntime.DependencyInjection.ServiceLibrary.RegisterService``2(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:IdleOfTheAgesRuntime.DependencyInjection.ServiceLibrary.RegisterService``2(System.Func{IdleOfTheAgesLib.DependencyInjection.IServiceLibrary,``0},System.String)">
            <inheritdoc/>
        </member>
        <member name="M:IdleOfTheAgesRuntime.DependencyInjection.ServiceLibrary.RegisterService``1(System.Func{IdleOfTheAgesLib.DependencyInjection.IServiceLibrary,``0},System.String)">
            <inheritdoc/>
        </member>
        <member name="M:IdleOfTheAgesRuntime.DependencyInjection.ServiceLibrary.RegisterService(System.Type,System.Func{IdleOfTheAgesLib.DependencyInjection.IServiceLibrary,System.Object},System.String)">
            <inheritdoc/>
        </member>
        <member name="M:IdleOfTheAgesRuntime.DependencyInjection.ServiceLibrary.RegisterService(System.Type,System.Type,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:IdleOfTheAgesRuntime.DependencyInjection.ServiceLibrary.RegisterService(System.Type,System.Type,System.Func{IdleOfTheAgesLib.DependencyInjection.IServiceLibrary,System.Object},System.String)">
            <inheritdoc/>
        </member>
        <member name="M:IdleOfTheAgesRuntime.DependencyInjection.ServiceLibrary.ContainsService``1(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:IdleOfTheAgesRuntime.DependencyInjection.ServiceLibrary.ContainsService(System.Type,System.String)">
            <inheritdoc/>
        </member>
        <member name="T:IdleOfTheAgesRuntime.Inventory.ItemStack">
            <summary>
            Represents a stack of items in the inventory.
            </summary>
        </member>
        <member name="P:IdleOfTheAgesRuntime.Inventory.ItemStack.ItemID">
            <inheritdoc/>
        </member>
        <member name="P:IdleOfTheAgesRuntime.Inventory.ItemStack.ItemData">
            <inheritdoc/>
        </member>
        <member name="P:IdleOfTheAgesRuntime.Inventory.ItemStack.Metadata">
            <inheritdoc/>
        </member>
        <member name="P:IdleOfTheAgesRuntime.Inventory.ItemStack.StackSize">
            <inheritdoc/>
        </member>
        <member name="M:IdleOfTheAgesRuntime.Inventory.ItemStack.#ctor(System.String,IdleOfTheAgesLib.Models.ModJsonData.ItemData)">
            <summary>
            Initializes a new instance of the <see cref="T:IdleOfTheAgesRuntime.Inventory.ItemStack"/> class.
            </summary>
            <param name="itemID">The ID of the item this item stack represents.</param>
            <param name="itemData">The item data for this item stack.</param>
        </member>
        <member name="T:IdleOfTheAgesRuntime.DataLoader">
            <summary>
            Allows for loading in data into the game.
            </summary>
        </member>
        <member name="F:IdleOfTheAgesRuntime.DataLoader.EXPLICITLY_IGNORED_EXTENSIONS">
            <summary>
            Extensions we explicitly ignore during the loading of data and don't log errors for.
            </summary>
        </member>
        <member name="M:IdleOfTheAgesRuntime.DataLoader.#ctor(IdleOfTheAgesLib.Skills.ISkillService,IdleOfTheAgesLib.Translation.ITranslationService,IdleOfTheAgesLib.Skills.IActionLibrary,IdleOfTheAgesLib.UI.Parsing.IParserService)">
            <summary>
            Initializes a new instance of the <see cref="T:IdleOfTheAgesRuntime.DataLoader"/> class.
            </summary>
            <param name="skillService">The skill service to load skills into.</param>
            <param name="translationService">The translation service to load translation files into.</param>
            <param name="actionLibrary">The action library to load actions into.</param>
            <param name="parserService">The parser service to load UI files into.</param>
        </member>
        <member name="M:IdleOfTheAgesRuntime.DataLoader.LoadData(IdleOfTheAgesLib.IModObject)">
            <inheritdoc/>
        </member>
        <member name="T:IdleOfTheAgesRuntime.Services.Logger">
            <summary>
            A logger that logs to all loggers that have been registered.
            </summary>
        </member>
        <member name="P:IdleOfTheAgesRuntime.Services.Logger.Namespace">
            <inheritdoc/>
        </member>
        <member name="M:IdleOfTheAgesRuntime.Services.Logger.#ctor(IdleOfTheAgesLib.DependencyInjection.IServiceLibrary)">
            <summary>
            Initializes a new instance of the <see cref="T:IdleOfTheAgesRuntime.Services.Logger"/> class.
            </summary>
            <param name="serviceLibrary">The service library to get all the loggers from.</param>
        </member>
        <member name="M:IdleOfTheAgesRuntime.Services.Logger.Error(System.String,System.Object[])">
            <inheritdoc/>
        </member>
        <member name="M:IdleOfTheAgesRuntime.Services.Logger.Info(System.String,System.Object[])">
            <inheritdoc/>
        </member>
        <member name="M:IdleOfTheAgesRuntime.Services.Logger.Warning(System.String,System.Object[])">
            <inheritdoc/>
        </member>
        <member name="M:IdleOfTheAgesRuntime.Services.Logger.LogResult(IdleOfTheAgesLib.Result)">
            <inheritdoc/>
        </member>
        <member name="M:IdleOfTheAgesRuntime.Services.Logger.LogResult``1(IdleOfTheAgesLib.Result{``0})">
            <inheritdoc/>
        </member>
        <member name="T:IdleOfTheAgesRuntime.Services.PageService">
            <summary>
            A service for containing all the pages the game can show.
            </summary>
        </member>
        <member name="M:IdleOfTheAgesRuntime.Services.PageService.AddPage(System.String,IdleOfTheAgesLib.Models.ModJsonData.PageData)">
            <inheritdoc/>
        </member>
        <member name="M:IdleOfTheAgesRuntime.Services.PageService.AddPageGroup(IdleOfTheAgesLib.Models.ModJsonData.PageGroupData)">
            <inheritdoc/>
        </member>
        <member name="M:IdleOfTheAgesRuntime.Services.PageService.GetAllPageGroups">
            <inheritdoc/>
        </member>
        <member name="M:IdleOfTheAgesRuntime.Services.PageService.GetPage(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:IdleOfTheAgesRuntime.Services.PageService.GetPageGroup(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:IdleOfTheAgesRuntime.Services.PageService.GetPagesInGroup(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:IdleOfTheAgesRuntime.LootLibrary">
            <summary>
            A library containing all <see cref="T:IdleOfTheAgesLib.Models.ModJsonData.LootTable"/>s.
            </summary>
        </member>
        <member name="M:IdleOfTheAgesRuntime.LootLibrary.GetLootTable(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:IdleOfTheAgesRuntime.LootLibrary.RegisterLootTable(IdleOfTheAgesLib.Models.ModJsonData.LootTable)">
            <inheritdoc/>
        </member>
        <member name="T:IdleOfTheAgesRuntime.ModLibrary">
            <summary>
            A library that contains all the mods that have been laoded.
            </summary>
        </member>
        <member name="M:IdleOfTheAgesRuntime.ModLibrary.GetModObject(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:IdleOfTheAgesRuntime.ModLibrary.ModExists(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:IdleOfTheAgesRuntime.ModLibrary.RegisterMod(System.String,IdleOfTheAgesLib.IModObject)">
            <inheritdoc/>
        </member>
        <member name="M:IdleOfTheAgesRuntime.ModLibrary.GetAllMods">
            <inheritdoc/>
        </member>
        <member name="T:IdleOfTheAgesRuntime.Skills.ActionLibrary">
            <summary>
            A library to hold the actions available.
            </summary>
        </member>
        <member name="M:IdleOfTheAgesRuntime.Skills.ActionLibrary.RegisterAction(IdleOfTheAgesLib.Models.ModJsonData.ActionData)">
            <inheritdoc/>
        </member>
        <member name="M:IdleOfTheAgesRuntime.Skills.ActionLibrary.GetAllActionsForSkill(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:IdleOfTheAgesRuntime.Skills.SkillService">
            <summary>
            A service that keeps track of all available skills.
            </summary>
        </member>
        <member name="P:IdleOfTheAgesRuntime.Skills.SkillService.CurrentlyShowingSkill">
            <inheritdoc/>
        </member>
        <member name="E:IdleOfTheAgesRuntime.Skills.SkillService.CurrentlyShowingSkillChangedEvent">
            <inheritdoc/>
        </member>
        <member name="M:IdleOfTheAgesRuntime.Skills.SkillService.#ctor(IdleOfTheAgesLib.IModLibrary)">
            <summary>
            Initializes a new instance of the <see cref="T:IdleOfTheAgesRuntime.Skills.SkillService"/> class.
            </summary>
            <param name="modLibrary">The mod library that contains all the mods.</param>
        </member>
        <member name="M:IdleOfTheAgesRuntime.Skills.SkillService.RegisterSkillImplementation``1(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:IdleOfTheAgesRuntime.Skills.SkillService.RegisterSkillImplementation(System.Type,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:IdleOfTheAgesRuntime.Skills.SkillService.GetSkill``1(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:IdleOfTheAgesRuntime.Skills.SkillService.GetSkills">
            <inheritdoc/>
        </member>
        <member name="M:IdleOfTheAgesRuntime.Skills.SkillService.ChangeShowingSkill(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:IdleOfTheAgesRuntime.Skills.SkillService.RegisterSkillData(IdleOfTheAgesLib.Models.ModJsonData.SkillData)">
            <inheritdoc/>
        </member>
        <member name="T:IdleOfTheAgesRuntime.Translation.TranslationService">
            <summary>
            Allows for translation of text.
            </summary>
        </member>
        <member name="P:IdleOfTheAgesRuntime.Translation.TranslationService.CurrentLanguage">
            <inheritdoc/>
        </member>
        <member name="E:IdleOfTheAgesRuntime.Translation.TranslationService.LanguageChangedEvent">
            <inheritdoc/>
        </member>
        <member name="M:IdleOfTheAgesRuntime.Translation.TranslationService.ChangeLanguage(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:IdleOfTheAgesRuntime.Translation.TranslationService.GetLanguageString(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:IdleOfTheAgesRuntime.Translation.TranslationService.LoadLanguagePath(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="T:IdleOfTheAgesRuntime.UI.Parsing.ParserLibrary">
            <summary>
            A library that stores all the parsers available.
            </summary>
        </member>
        <member name="M:IdleOfTheAgesRuntime.UI.Parsing.ParserLibrary.#ctor(IdleOfTheAgesLib.DependencyInjection.IServiceLibrary,IdleOfTheAgesLib.UI.Parsing.IParserLibrary)">
            <summary>
            Initializes a new instance of the <see cref="T:IdleOfTheAgesRuntime.UI.Parsing.ParserLibrary"/> class.
            </summary>
            <param name="serviceLibrary">The service library that contains the services.</param>
            <param name="parent">The parent parser library.</param>
        </member>
        <member name="M:IdleOfTheAgesRuntime.UI.Parsing.ParserLibrary.GetElementManager(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:IdleOfTheAgesRuntime.UI.Parsing.ParserLibrary.GetElementManager``1(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:IdleOfTheAgesRuntime.UI.Parsing.ParserLibrary.RegisterElementManager``1(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:IdleOfTheAgesRuntime.UI.Parsing.ParserLibrary.RegisterElementManager(System.Type,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:IdleOfTheAgesRuntime.UI.Parsing.ParserLibrary.RegisterUIModel``1(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:IdleOfTheAgesRuntime.UI.Parsing.ParserLibrary.RegisterUIModel(System.Type,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:IdleOfTheAgesRuntime.UI.Parsing.ParserLibrary.GetUIModel(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:IdleOfTheAgesRuntime.UI.Parsing.ParserService">
            <summary>
            A service that parses HTML files into trees that can be used to create the UI.
            </summary>
        </member>
        <member name="M:IdleOfTheAgesRuntime.UI.Parsing.ParserService.GetUI(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:IdleOfTheAgesRuntime.UI.Parsing.ParserService.RegisterFile(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="T:IdleOfTheAgesRuntime.UI.Parsing.ParserStateMachine.ElementParserState">
            <summary>
            A state that parses elements.
            </summary>
        </member>
        <member name="P:IdleOfTheAgesRuntime.UI.Parsing.ParserStateMachine.ElementParserState.Instance">
            <summary>
            Gets a static instance to use.
            </summary>
        </member>
        <member name="M:IdleOfTheAgesRuntime.UI.Parsing.ParserStateMachine.ElementParserState.Tick(IdleOfTheAgesRuntime.UI.Parsing.ParserStateMachine.ParserState)">
            <inheritdoc/>
        </member>
        <member name="T:IdleOfTheAgesRuntime.UI.Parsing.ParserStateMachine.MetadataParserState">
            <summary>
            A state that parses metadata.
            </summary>
        </member>
        <member name="P:IdleOfTheAgesRuntime.UI.Parsing.ParserStateMachine.MetadataParserState.Instance">
            <summary>
             Gets a static instance to use.
            </summary>
        </member>
        <member name="M:IdleOfTheAgesRuntime.UI.Parsing.ParserStateMachine.MetadataParserState.Tick(IdleOfTheAgesRuntime.UI.Parsing.ParserStateMachine.ParserState)">
            <inheritdoc/>
        </member>
        <member name="T:IdleOfTheAgesRuntime.UI.Parsing.ParserStateMachine.ParserState">
            <summary>
            Contains the state of the parser.
            </summary>
        </member>
        <member name="P:IdleOfTheAgesRuntime.UI.Parsing.ParserStateMachine.ParserState.Html">
            <summary>
            Gets the HTML to parse.
            </summary>
        </member>
        <member name="P:IdleOfTheAgesRuntime.UI.Parsing.ParserStateMachine.ParserState.RootNode">
            <summary>
            Gets the root node of the parsed HTML.
            </summary>
        </member>
        <member name="P:IdleOfTheAgesRuntime.UI.Parsing.ParserStateMachine.ParserState.CurrentNode">
            <summary>
            Gets or sets the current node that is being parsed.
            </summary>
        </member>
        <member name="P:IdleOfTheAgesRuntime.UI.Parsing.ParserStateMachine.ParserState.CurrentCharacterIndex">
            <summary>
            Gets or sets the current character index that is being parsed.
            </summary>
        </member>
        <member name="P:IdleOfTheAgesRuntime.UI.Parsing.ParserStateMachine.ParserState.CurrentLineCharacter">
            <summary>
            Gets the current character that is being parsed.
            </summary>
        </member>
        <member name="P:IdleOfTheAgesRuntime.UI.Parsing.ParserStateMachine.ParserState.IsFinished">
            <summary>
            Gets a value indicating whether the current line has finished being parsed.
            </summary>
        </member>
        <member name="P:IdleOfTheAgesRuntime.UI.Parsing.ParserStateMachine.ParserState.CloseNodeWhenFinished">
            <summary>
            Gets or sets a value indicating whether the <see cref="P:IdleOfTheAgesRuntime.UI.Parsing.ParserStateMachine.ParserState.CurrentNode"/> should be closed when the current tag is finished parsing.
            </summary>
        </member>
        <member name="P:IdleOfTheAgesRuntime.UI.Parsing.ParserStateMachine.ParserState.StateToReturnTo">
            <summary>
            Gets or sets the state to return to when finishing certain tasks.
            </summary>
        </member>
        <member name="M:IdleOfTheAgesRuntime.UI.Parsing.ParserStateMachine.ParserState.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IdleOfTheAgesRuntime.UI.Parsing.ParserStateMachine.ParserState"/> class.
            </summary>
            <param name="html">The html to parse.</param>
        </member>
        <member name="M:IdleOfTheAgesRuntime.UI.Parsing.ParserStateMachine.ParserState.ReadCurrentChar">
            <summary>
            Reads the current character, and moving towards the next character.
            </summary>
            <returns>The character currently being processed.</returns>
        </member>
        <member name="M:IdleOfTheAgesRuntime.UI.Parsing.ParserStateMachine.ParserState.GetCurrentChar">
            <summary>
            Gets the current character.
            </summary>
            <returns>The character currently being processed.</returns>
        </member>
        <member name="M:IdleOfTheAgesRuntime.UI.Parsing.ParserStateMachine.ParserState.ReadCurrentWord">
            <summary>
            Reads the next word from the HTML, and moves towards the next character.
            </summary>
            <returns>The next word from the HTML.</returns>
        </member>
        <member name="M:IdleOfTheAgesRuntime.UI.Parsing.ParserStateMachine.ParserState.GetCurrentWord">
            <summary>
            Gets the next word from the HTML.
            </summary>
            <returns>The next word from the HTML.</returns>
        </member>
        <member name="M:IdleOfTheAgesRuntime.UI.Parsing.ParserStateMachine.ParserState.SkipWhiteSpace">
            <summary>
            Skips characters until a non-whitespace character is encountered.
            </summary>
        </member>
        <member name="M:IdleOfTheAgesRuntime.UI.Parsing.ParserStateMachine.ParserState.Advance">
            <summary>
            Advances to the next character.
            </summary>
            <returns><see langword="true"/> if there are still more characters to process, otherwise <see langword="false"/>.</returns>
        </member>
        <member name="T:IdleOfTheAgesRuntime.UI.Parsing.ParserStateMachine.PostElementParserState">
            <summary>
            A state that decides what to do after parsing the tag's element.
            </summary>
        </member>
        <member name="P:IdleOfTheAgesRuntime.UI.Parsing.ParserStateMachine.PostElementParserState.Instance">
            <summary>
             Gets a static instance to use.
            </summary>
        </member>
        <member name="M:IdleOfTheAgesRuntime.UI.Parsing.ParserStateMachine.PostElementParserState.Tick(IdleOfTheAgesRuntime.UI.Parsing.ParserStateMachine.ParserState)">
            <inheritdoc/>
        </member>
        <member name="T:IdleOfTheAgesRuntime.UI.Parsing.ParserStateMachine.StarterState">
            <summary>
            The initial state to parse a line.
            </summary>
        </member>
        <member name="P:IdleOfTheAgesRuntime.UI.Parsing.ParserStateMachine.StarterState.Instance">
            <summary>
            Gets a static instance to use.
            </summary>
        </member>
        <member name="M:IdleOfTheAgesRuntime.UI.Parsing.ParserStateMachine.StarterState.Tick(IdleOfTheAgesRuntime.UI.Parsing.ParserStateMachine.ParserState)">
            <inheritdoc/>
        </member>
        <member name="T:IdleOfTheAgesRuntime.User.PlayerService">
            <summary>
            A service that holds all relevant information about the player.
            <para>For information about the player, see <see cref="T:IdleOfTheAgesLib.User.IUserService"/>.</para>
            </summary>
        </member>
        <member name="T:IdleOfTheAgesRuntime.User.UserService">
            <summary>
            A service that holds all relevant information about the user.
            <para>For information about the player, see <see cref="T:IdleOfTheAgesLib.User.IPlayerService"/>.</para>
            </summary>
        </member>
    </members>
</doc>
