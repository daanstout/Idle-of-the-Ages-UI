<?xml version="1.0"?>
<doc>
    <assembly>
        <name>IdleOfTheAgesLib</name>
    </assembly>
    <members>
        <member name="T:IdleOfTheAgesLib.IModObject">
            <summary>
            Contains all relevant mod data.
            </summary>
        </member>
        <member name="P:IdleOfTheAgesLib.IModObject.Logger">
            <summary>
            Gets a logger to log data to.
            </summary>
        </member>
        <member name="P:IdleOfTheAgesLib.IModObject.Mod">
            <summary>
            Gets the instance of the mod's initializer class.
            </summary>
        </member>
        <member name="P:IdleOfTheAgesLib.IModObject.Namespace">
            <summary>
            Gets the namespace of the mod.
            </summary>
        </member>
        <member name="P:IdleOfTheAgesLib.IModObject.ServiceLibrary">
            <summary>
            Gets the service library containing this mod's services.
            </summary>
        </member>
        <member name="P:IdleOfTheAgesLib.IModObject.ServiceRegistry">
            <summary>
            Gets the service registry from this mod to register services to.
            </summary>
        </member>
        <member name="P:IdleOfTheAgesLib.IModObject.ModAssembly">
            <summary>
            Gets the mod's assembly.
            </summary>
        </member>
        <member name="T:IdleOfTheAgesLib.DependencyInjection.CyclicalDependencyException">
            <summary>
            An exception that is thrown when 2 dependencies have a cyclical dependency on each other.
            </summary>
        </member>
        <member name="M:IdleOfTheAgesLib.DependencyInjection.CyclicalDependencyException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:IdleOfTheAgesLib.DependencyInjection.CyclicalDependencyException"/> class.
            </summary>
        </member>
        <member name="M:IdleOfTheAgesLib.DependencyInjection.CyclicalDependencyException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IdleOfTheAgesLib.DependencyInjection.CyclicalDependencyException"/> class.
            with a specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:IdleOfTheAgesLib.DependencyInjection.CyclicalDependencyException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:IdleOfTheAgesLib.DependencyInjection.CyclicalDependencyException"/> class with a specified error.
            message and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception, or a null reference
            (Nothing in Visual Basic) if no inner exception is specified.</param>
        </member>
        <member name="M:IdleOfTheAgesLib.DependencyInjection.CyclicalDependencyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:IdleOfTheAgesLib.DependencyInjection.CyclicalDependencyException"/> class with serialized data.
            </summary>
            <param name="info">The System.Runtime.Serialization.SerializationInfo that holds the serialized
            object data about the exception being thrown.</param>
            <param name="context">The System.Runtime.Serialization.StreamingContext that contains contextual information
            about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">info is null.</exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult"/> is zero (0).</exception>
        </member>
        <member name="T:IdleOfTheAgesLib.DependencyInjection.IDependencyInjector">
            <summary>
            A service that can inject objects with dependencies.
            </summary>
        </member>
        <member name="M:IdleOfTheAgesLib.DependencyInjection.IDependencyInjector.InjectDependencies(System.Object)">
            <summary>
            Injects an object with its dependencies through a function called: <code>InjectDependencies(...).</code>
            </summary>
            <param name="target">The object to inject.</param>
            <returns>Whether there were any issues with the injection.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="target"/> is null.</exception>
            <exception cref="T:System.ArgumentException">Thrown if <paramref name="target"/> does not contain a function called `InjectDependencies`.</exception>
        </member>
        <member name="M:IdleOfTheAgesLib.DependencyInjection.IDependencyInjector.InjectDependencies(UnityEngine.GameObject)">
            <summary>
            Injects <see cref="T:UnityEngine.MonoBehaviour"/>s on a <see cref="T:UnityEngine.GameObject"/> with dependencies through a function called: <code>InjectDependencies(...).</code>
            </summary>
            <param name="gameObject">The gameobject to inject.</param>
            <returns>Whether there were any issues with the injection.</returns>
        </member>
        <member name="T:IdleOfTheAgesLib.DependencyInjection.IResolver">
            <summary>
            A resolver to resolve a dependency to an instance.
            </summary>
        </member>
        <member name="P:IdleOfTheAgesLib.DependencyInjection.IResolver.Factory">
            <summary>
            Gets or sets a factory that can be used to resolve the instance.
            </summary>
        </member>
        <member name="P:IdleOfTheAgesLib.DependencyInjection.IResolver.IsSingleton">
            <summary>
            Gets or sets a value indicating whether a boolean that indicates whether or not the target is a singleton.
            </summary>
        </member>
        <member name="M:IdleOfTheAgesLib.DependencyInjection.IResolver.Resolve(IdleOfTheAgesLib.DependencyInjection.IServiceLibrary)">
            <summary>
            Resolves the dependency to the instance, creating a new one if one doesn't exist yet.
            </summary>
            <param name="serviceLibrary">The <see cref="T:IdleOfTheAgesLib.DependencyInjection.IServiceLibrary"/> to obtain the dependencies from.</param>
            <returns>An instance of the dependency.</returns>
        </member>
        <member name="M:IdleOfTheAgesLib.DependencyInjection.IResolver.ToInstance(System.Object)">
            <summary>
            Sets the instance this resolver should use.
            </summary>
            <param name="instance">The instance to use.</param>
        </member>
        <member name="M:IdleOfTheAgesLib.DependencyInjection.IResolver.SetInstanceType(System.Type)">
            <summary>
            Sets the type created instances should be.
            </summary>
            <param name="instanceType">The type created instances should be.</param>
        </member>
        <member name="T:IdleOfTheAgesLib.DependencyInjection.IResolver`1">
            <summary>
            A resolver to resolve a dependency to an instance.
            </summary>
            <typeparam name="TType">The type the resolver resolves for.</typeparam>
        </member>
        <member name="M:IdleOfTheAgesLib.DependencyInjection.IResolver`1.Resolve(IdleOfTheAgesLib.DependencyInjection.IServiceLibrary)">
            <summary>
            Resolves the dependency to the instance, creating a new one if one doesn't exist yet.
            </summary>
            <param name="serviceLibrary">The <see cref="T:IdleOfTheAgesLib.DependencyInjection.IServiceLibrary"/> to obtain the dependencies from.</param>
            <returns>An instance of the dependency.</returns>
        </member>
        <member name="T:IdleOfTheAgesLib.DependencyInjection.IServiceLibrary">
            <summary>
            A library where services that are registered through a <see cref="T:IdleOfTheAgesLib.DependencyInjection.IServiceRegistry"/> can be obtained from.
            </summary>
        </member>
        <member name="M:IdleOfTheAgesLib.DependencyInjection.IServiceLibrary.Get``1(System.String)">
            <summary>
            Gets the instance for the requested <typeparamref name="TType"/>.
            </summary>
            <typeparam name="TType">The type to get the instance for.</typeparam>
            <param name="key">The key to the specific instance.</param>
            <returns>The requested instance.</returns>
        </member>
        <member name="M:IdleOfTheAgesLib.DependencyInjection.IServiceLibrary.Get(System.Type,System.String)">
            <summary>
            Gets the instance for the requested <paramref name="type"/>.
            </summary>
            <param name="type">The type to get the instance for.</param>
            <param name="key">The key to the specific instance.</param>
            <returns>The requested instance.</returns>
        </member>
        <member name="M:IdleOfTheAgesLib.DependencyInjection.IServiceLibrary.GetAllServiceNames">
            <summary>
            Obtains a list of the names of all registered services that can be obtained.
            </summary>
            <returns>A list of names of all registered services.</returns>
        </member>
        <member name="M:IdleOfTheAgesLib.DependencyInjection.IServiceLibrary.ContainsService``1(System.String)">
            <summary>
            Checks whether or not a service is registered with the given key.
            </summary>
            <typeparam name="TType">The service to check for.</typeparam>
            <param name="key">The key to check with.</param>
            <returns><see langword="true"/> if the service exists, <see langword="false"/> if not.</returns>
        </member>
        <member name="M:IdleOfTheAgesLib.DependencyInjection.IServiceLibrary.ContainsService(System.Type,System.String)">
            <summary>
            Checks whether or not a service is registered with the given key.
            </summary>
            <param name="type">The service to check for.</param>
            <param name="key">The key to check with.</param>
            <returns><see langword="true"/> if the service exists, <see langword="false"/> if not.</returns>
        </member>
        <member name="T:IdleOfTheAgesLib.DependencyInjection.IServiceRegistry">
            <summary>
            A registry where services can be registered to, which can then be obtained through the <see cref="T:IdleOfTheAgesLib.DependencyInjection.IServiceLibrary"/>.
            </summary>
        </member>
        <member name="M:IdleOfTheAgesLib.DependencyInjection.IServiceRegistry.Bind(System.Type,System.String)">
            <summary>
            Obtains the <see cref="T:IdleOfTheAgesLib.DependencyInjection.IResolver"/> for the provided <paramref name="type"/> and <paramref name="key"/> combination.
            <para>If no resolver exists, a new one will be created.</para>
            <para>Note that if no resolver exists and <paramref name="type"/> is either an interface or an abstract class, a factory should be provided as otherwise the resolver will throw an error when resolving.</para>
            </summary>
            <param name="type">The type to get the resolver for.</param>
            <param name="key">The key to the specific dependency required.</param>
            <returns>The <see cref="T:IdleOfTheAgesLib.DependencyInjection.IResolver"/> for the <paramref name="type"/> and <paramref name="key"/> combination.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="type"/> is null.</exception>
        </member>
        <member name="M:IdleOfTheAgesLib.DependencyInjection.IServiceRegistry.Bind``1(System.String)">
            <summary>
            Obtains the <see cref="T:IdleOfTheAgesLib.DependencyInjection.IResolver`1"/> for the provided <typeparamref name="TType"/> and <paramref name="key"/> combination.
            <para>If no resolver exists, a new one will be created.</para>
            <para>Note that if no resolver exists and <typeparamref name="TType"/> is either an interface or an abstract class, a factory should be provided as otherwise the resolver will throw an error when resolving.</para>
            </summary>
            <typeparam name="TType">The type to get the resolver for.</typeparam>
            <param name="key">The key to the specific dependency required.</param>
            <returns>The <see cref="T:IdleOfTheAgesLib.DependencyInjection.IResolver`1"/> for the <typeparamref name="TType"/> and <paramref name="key"/> combination.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if <typeparamref name="TType"/> is null.</exception>
        </member>
        <member name="M:IdleOfTheAgesLib.DependencyInjection.IServiceRegistry.RegisterService``2(System.String)">
            <summary>
            Registers a service to the library.
            </summary>
            <typeparam name="TInterface">The type of the interface.</typeparam>
            <typeparam name="TImplementation">The type of the implementation.</typeparam>
            <param name="key">The key to store the service under.</param>
            <returns><see langword="true"/> if the service was successfully registered, <see langword="false"/> if not.</returns>
        </member>
        <member name="M:IdleOfTheAgesLib.DependencyInjection.IServiceRegistry.RegisterService(System.Type,System.Type,System.String)">
            <summary>
            Registers a service to the library.
            </summary>
            <param name="interfaceType">The type of the interface.</param>
            <param name="implementationType">The type of the implementation.</param>
            <param name="key">The key to store the service under.</param>
            <returns><see langword="true"/> if the service was successfully registered, <see langword="false"/> if not.</returns>
        </member>
        <member name="M:IdleOfTheAgesLib.DependencyInjection.IServiceRegistry.RegisterService``1(System.Func{IdleOfTheAgesLib.DependencyInjection.IServiceLibrary,``0},System.String)">
            <summary>
            Registers a service to the library.
            </summary>
            <typeparam name="TInterface">The type of the interface.</typeparam>
            <param name="factory">A factory that is used to create the instance.</param>
            <param name="key">The key to store the service under.</param>
            <returns><see langword="true"/> if the service was successfully registered, <see langword="false"/> if not.</returns>
        </member>
        <member name="M:IdleOfTheAgesLib.DependencyInjection.IServiceRegistry.RegisterService(System.Type,System.Func{IdleOfTheAgesLib.DependencyInjection.IServiceLibrary,System.Object},System.String)">
            <summary>
            Registers a service to the library.
            </summary>
            <param name="interfaceType">The type of the interface.</param>
            <param name="factory">A factory that is used to create the instance.</param>
            <param name="key">The key to store the service under.</param>
            <returns><see langword="true"/> if the service was successfully registered, <see langword="false"/> if not.</returns>
        </member>
        <member name="M:IdleOfTheAgesLib.DependencyInjection.IServiceRegistry.RegisterService``2(System.Func{IdleOfTheAgesLib.DependencyInjection.IServiceLibrary,``0},System.String)">
            <summary>
            Registers a service to the library.
            </summary>
            <typeparam name="TInterface">The type of the interface.</typeparam>
            <typeparam name="TImplementation">The type of the implementation.</typeparam>
            <param name="factory">A factory that is used to create the instance.</param>
            <param name="key">The key to store the service under.</param>
            <returns><see langword="true"/> if the service was successfully registered, <see langword="false"/> if not.</returns>
        </member>
        <member name="M:IdleOfTheAgesLib.DependencyInjection.IServiceRegistry.RegisterService(System.Type,System.Type,System.Func{IdleOfTheAgesLib.DependencyInjection.IServiceLibrary,System.Object},System.String)">
            <summary>
            Registers a service to the library.
            </summary>
            <param name="interfaceType">The type of the interface.</param>
            <param name="implementationType">The type of the implementation.</param>
            <param name="factory">A factory that is used to create the instance.</param>
            <param name="key">The key to store the service under.</param>
            <returns><see langword="true"/> if the service was successfully registered, <see langword="false"/> if not.</returns>
        </member>
        <member name="T:IdleOfTheAgesLib.DependencyIdentifierAttribute">
            <summary>
            An attribute that can be applied to parameters to provide a key to the required dependency.
            </summary>
        </member>
        <member name="P:IdleOfTheAgesLib.DependencyIdentifierAttribute.Key">
            <summary>
            Gets or sets the key of the dependency instance to obtain.
            </summary>
        </member>
        <member name="M:IdleOfTheAgesLib.DependencyIdentifierAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IdleOfTheAgesLib.DependencyIdentifierAttribute"/> class.
            </summary>
            <param name="key">The key of the dependency instance to obtain.</param>
        </member>
        <member name="T:IdleOfTheAgesLib.ServiceAttribute">
            <summary>
            An attribute that can be put on services to indicate they are a service.
            <para>Using this attribute makes it so you don't have to register services in a <see cref="T:IdleOfTheAgesLib.DependencyInjection.IServiceRegistry"/>.</para>
            </summary>
        </member>
        <member name="T:IdleOfTheAgesLib.ServiceAttribute.ServiceLevelEnum">
            <summary>
            Can be used to indicate whether the service is only for private use, or also for public use.
            </summary>
        </member>
        <member name="F:IdleOfTheAgesLib.ServiceAttribute.ServiceLevelEnum.Private">
            <summary>
            The service is only for the mod itself.
            </summary>
        </member>
        <member name="F:IdleOfTheAgesLib.ServiceAttribute.ServiceLevelEnum.Public">
            <summary>
            The service can also be requested by other mods.
            </summary>
        </member>
        <member name="P:IdleOfTheAgesLib.ServiceAttribute.InterfaceType">
            <summary>
            Gets the type of the interface this service is implementing.
            </summary>
        </member>
        <member name="P:IdleOfTheAgesLib.ServiceAttribute.Key">
            <summary>
            Gets the key for identifying this service.
            </summary>
        </member>
        <member name="P:IdleOfTheAgesLib.ServiceAttribute.ServiceLevel">
            <summary>
            Gets indicates whether this service should be public or private.
            </summary>
        </member>
        <member name="M:IdleOfTheAgesLib.ServiceAttribute.#ctor(System.Type,System.String,IdleOfTheAgesLib.ServiceAttribute.ServiceLevelEnum)">
            <summary>
            Initializes a new instance of the <see cref="T:IdleOfTheAgesLib.ServiceAttribute"/> class.
            </summary>
            <param name="interfaceType">The Type of the interface the service is implemting.</param>
            <param name="key">The key for identifying the service.</param>
            <param name="serviceLevel">Whether the service is public or private.</param>
        </member>
        <member name="T:IdleOfTheAgesLib.Extensions.ServiceLibrary.ServiceLibraryExtensions">
            <summary>
            Contains extensions for the <see cref="T:IdleOfTheAgesLib.DependencyInjection.IServiceLibrary"/> interface.
            </summary>
        </member>
        <member name="M:IdleOfTheAgesLib.Extensions.ServiceLibrary.ServiceLibraryExtensions.GetInstances(IdleOfTheAgesLib.DependencyInjection.IServiceLibrary,System.Collections.Generic.IEnumerable{System.Reflection.ParameterInfo})">
            <summary>
            Obtains instances for the provided <paramref name="types"/>.
            </summary>
            <param name="serviceLibrary">The service library to get the instances from.</param>
            <param name="types">The parameters to obtain instances for.</param>
            <returns>An <see cref="T:System.Array"/> containing the instances in order.</returns>
        </member>
        <member name="T:IdleOfTheAgesLib.ILogger">
            <summary>
            A logger to log information to.
            </summary>
        </member>
        <member name="P:IdleOfTheAgesLib.ILogger.Namespace">
            <summary>
            Gets the namespace the logger logs to.
            </summary>
        </member>
        <member name="M:IdleOfTheAgesLib.ILogger.Info(System.String,System.Object[])">
            <summary>
            Logs a message to the logger.
            </summary>
            <param name="message">The message to log.</param>
            <param name="objects">Parameters to add to the message.</param>
        </member>
        <member name="M:IdleOfTheAgesLib.ILogger.Warning(System.String,System.Object[])">
            <summary>
            Logs a warning to the logger.
            </summary>
            <param name="message">The message to log.</param>
            <param name="objects">Parameters to add to the message.</param>
        </member>
        <member name="M:IdleOfTheAgesLib.ILogger.Error(System.String,System.Object[])">
            <summary>
            Logs an error to the logger.
            </summary>
            <param name="message">The message to log.</param>
            <param name="objects">Parameters to add to the message.</param>
        </member>
        <member name="T:IdleOfTheAgesLib.IMod">
            <summary>
            The entry class for a Mod.
            <para>Mod initialization happens in steps:
            <list type="number">
            <item>The <see cref="T:IdleOfTheAgesLib.IModObject"/> is created with the relevant objects for the mod.</item>
            <item>Services with a <see cref="T:IdleOfTheAgesLib.ServiceAttribute"/> are registered with the <see cref="T:IdleOfTheAgesLib.DependencyInjection.IServiceRegistry"/>.</item>
            <item><see cref="M:IdleOfTheAgesLib.IMod.RegisterPublicServices(IdleOfTheAgesLib.DependencyInjection.IServiceRegistry)"/> is called, allowing for public services to be registered.</item>
            <item><see cref="M:IdleOfTheAgesLib.IMod.RegisterServices(IdleOfTheAgesLib.DependencyInjection.IServiceRegistry)"/> is called, allowing for private services to be registered.</item>
            <item><see cref="M:IdleOfTheAgesLib.IMod.ModLoaded(IdleOfTheAgesLib.DependencyInjection.IServiceLibrary)"/> is called. Other mods are still to be loaded, so only do things that need to happen early.</item>
            <item><see cref="M:IdleOfTheAgesLib.IMod.AppLoaded(IdleOfTheAgesLib.DependencyInjection.IServiceLibrary)"/> is called once the game and all mods have been loaded, but before the main menu is shown. This is where menu modifications and game modes should be loaded.</item>
            <item><see cref="M:IdleOfTheAgesLib.IMod.GameLoaded(IdleOfTheAgesLib.DependencyInjection.IServiceLibrary)"/> is called once the player has selected a game. This is where most game modifications should go.</item>
            </list>
            </para>
            </summary>
        </member>
        <member name="M:IdleOfTheAgesLib.IMod.RegisterServices(IdleOfTheAgesLib.DependencyInjection.IServiceRegistry)">
            <summary>
            This function can be used to register the services used by the mod.
            <para>The services registered are registered within the mod's namespace.</para>
            </summary>
            <param name="serviceRegistry">The service registry to register services to.</param>
        </member>
        <member name="M:IdleOfTheAgesLib.IMod.RegisterPublicServices(IdleOfTheAgesLib.DependencyInjection.IServiceRegistry)">
            <summary>
            This function can be used to register services from this mod that should be accessible to other mods.
            <para>Keep in mind that services registered here can only use other public services, or services provided by the base game.
            services registered with <see cref="M:IdleOfTheAgesLib.IMod.RegisterServices(IdleOfTheAgesLib.DependencyInjection.IServiceRegistry)"/> can not be used within public services.</para>
            </summary>
            <param name="serviceRegistry">The service registry to register services to.</param>
        </member>
        <member name="M:IdleOfTheAgesLib.IMod.AppLoaded(IdleOfTheAgesLib.DependencyInjection.IServiceLibrary)">
            <summary>
            This function is called when the app has loaded, before the main menu is shown.
            </summary>
            <param name="serviceLibrary">The service library for this mod.</param>
        </member>
        <member name="M:IdleOfTheAgesLib.IMod.GameLoaded(IdleOfTheAgesLib.DependencyInjection.IServiceLibrary)">
            <summary>
            This function is called when the game has loaded, when the player has selected a save.
            </summary>
            <param name="serviceLibrary">The service library for this mod.</param>
        </member>
        <member name="M:IdleOfTheAgesLib.IMod.ModLoaded(IdleOfTheAgesLib.DependencyInjection.IServiceLibrary)">
            <summary>
            This function is called directly after the mod has been loaded.
            <para>Keep in mind that mod loading in general is still in progress.</para>
            </summary>
            <param name="serviceLibrary">The service library for this mod.</param>
        </member>
        <member name="T:IdleOfTheAgesLib.Inventory.IInventoryService">
            <summary>
            Represents the player's inventory.
            </summary>
        </member>
        <member name="M:IdleOfTheAgesLib.Inventory.IInventoryService.AddItem(IdleOfTheAgesLib.Inventory.IItemStack)">
            <summary>
            Adds an item to the player's inventory.
            </summary>
            <param name="item">The item to add to the player's inventory.</param>
            <returns>A <see cref="T:IdleOfTheAgesLib.Result"/> object to check if the call was successful.</returns>
        </member>
        <member name="M:IdleOfTheAgesLib.Inventory.IInventoryService.GetItems">
            <summary>
            Gets all the items in the player's inventory.
            </summary>
            <returns>An enumerable with all the items.</returns>
        </member>
        <member name="T:IdleOfTheAgesLib.Inventory.IItemService">
            <summary>
            A service that holds data about all the items registered in the game.
            </summary>
        </member>
        <member name="M:IdleOfTheAgesLib.Inventory.IItemService.RegisterItem(IdleOfTheAgesLib.Models.ModJsonData.ItemData)">
            <summary>
            Registers an item to the service.
            </summary>
            <param name="item">The item to register.</param>
            <returns>A <see cref="T:IdleOfTheAgesLib.Result"/> object to check if the call was successful.</returns>
        </member>
        <member name="M:IdleOfTheAgesLib.Inventory.IItemService.GetItemData(System.String)">
            <summary>
            Obtains the item data for an item.
            </summary>
            <param name="itemID">The item ID to obtain the item data for.</param>
            <returns>The item data for the item.</returns>
        </member>
        <member name="T:IdleOfTheAgesLib.Inventory.IItemStack">
            <summary>
            Represents a stack of items in the inventory.
            </summary>
        </member>
        <member name="P:IdleOfTheAgesLib.Inventory.IItemStack.ItemID">
            <summary>
            Gets the ID of the item this stack represents.
            </summary>
        </member>
        <member name="P:IdleOfTheAgesLib.Inventory.IItemStack.ItemData">
            <summary>
            Gets the data for this item.
            </summary>
        </member>
        <member name="P:IdleOfTheAgesLib.Inventory.IItemStack.Metadata">
            <summary>
            Gets the metadata for this item.
            </summary>
        </member>
        <member name="P:IdleOfTheAgesLib.Inventory.IItemStack.StackSize">
            <summary>
            Gets or sets the amount of items that are in this stack.
            </summary>
        </member>
        <member name="T:IdleOfTheAgesLib.Inventory.IStorageGroup">
            <summary>
            Inherit from this class to add a bank tab.
            </summary>
        </member>
        <member name="T:IdleOfTheAgesLib.Inventory.IStorageService">
            <summary>
            Keeps track of all the items in the storage.
            </summary>
        </member>
        <member name="M:IdleOfTheAgesLib.Inventory.IStorageService.AddItem``1(System.String,System.Int32)">
            <summary>
            Adds an item to the player's storage.
            </summary>
            <typeparam name="TGroup">The storage group to add the item to.</typeparam>
            <param name="itemID">The item to add to the player's storage.</param>
            <param name="count">How many items to add.</param>
            <returns>A <see cref="T:IdleOfTheAgesLib.Result"/> object to check if the call was successful.</returns>
        </member>
        <member name="M:IdleOfTheAgesLib.Inventory.IStorageService.GetItem``1(System.String)">
            <summary>
            Gets an item from the storage.
            </summary>
            <typeparam name="TGroup">The storage group to look in.</typeparam>
            <param name="itemID">The ID of the item to obtain.</param>
            <returns>The requested items.</returns>
        </member>
        <member name="M:IdleOfTheAgesLib.Inventory.IStorageService.ContainsItem``1(System.String)">
            <summary>
            Checks to see if an item with the provided ID exists within the storage.
            </summary>
            <typeparam name="TGroup">The storage group to look in.</typeparam>
            <param name="itemID">The ID of the item to obtain.</param>
            <returns><see langword="true"/> if the item exists, and <see langword="false"/> if not.</returns>
        </member>
        <member name="M:IdleOfTheAgesLib.Inventory.IStorageService.GetItems">
            <summary>
            Gets all the items in the player's storage.
            </summary>
            <returns>An enumerable with all the items.</returns>
        </member>
        <member name="M:IdleOfTheAgesLib.Inventory.IStorageService.GetItems``1">
            <summary>
            Gets all the items in the player's storage that are stored in the given storage group.
            </summary>
            <typeparam name="TGroup">The storage group to get the items from.</typeparam>
            <returns>An enumerable with all the items.</returns>
        </member>
        <member name="T:IdleOfTheAgesLib.Models.ModJsonData.AgeData">
            <summary>
            An age that the player can be in.
            </summary>
        </member>
        <member name="M:IdleOfTheAgesLib.Models.ModJsonData.AgeData.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:IdleOfTheAgesLib.Models.ModJsonData.AgeData"/> class.
            </summary>
        </member>
        <member name="M:IdleOfTheAgesLib.Models.ModJsonData.AgeData.#ctor(System.String,System.String,System.String,System.String,IdleOfTheAgesLib.Models.ModJsonData.SortingOrderData,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IdleOfTheAgesLib.Models.ModJsonData.AgeData"/> class.
            </summary>
            <param name="namespace">The namespace of the element.</param>
            <param name="id">The ID of the element.</param>
            <param name="name">The name of the element.</param>
            <param name="translationKey">The translation key of the element.</param>
            <param name="sortingOrder">The sorting order of the element.</param>
            <param name="thumbnail">The thumbnail for the element.</param>
        </member>
        <member name="T:IdleOfTheAgesLib.Models.ModJsonData.BaseDataElement">
            <summary>
            A base class for data elements.
            </summary>
        </member>
        <member name="P:IdleOfTheAgesLib.Models.ModJsonData.BaseDataElement.Namespace">
            <summary>
            Gets or sets the namespace of the object.
            </summary>
        </member>
        <member name="P:IdleOfTheAgesLib.Models.ModJsonData.BaseDataElement.ID">
            <summary>
            Gets the ID of the object.
            </summary>
        </member>
        <member name="P:IdleOfTheAgesLib.Models.ModJsonData.BaseDataElement.Name">
            <summary>
            Gets the name of the object.
            </summary>
        </member>
        <member name="P:IdleOfTheAgesLib.Models.ModJsonData.BaseDataElement.NamespacedID">
            <summary>
            Gets the object's namespaced ID.
            </summary>
        </member>
        <member name="M:IdleOfTheAgesLib.Models.ModJsonData.BaseDataElement.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:IdleOfTheAgesLib.Models.ModJsonData.BaseDataElement"/> class.
            </summary>
        </member>
        <member name="M:IdleOfTheAgesLib.Models.ModJsonData.BaseDataElement.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IdleOfTheAgesLib.Models.ModJsonData.BaseDataElement"/> class.
            </summary>
            <param name="namespace">The namespace of the element.</param>
            <param name="id">The ID of the element.</param>
            <param name="name">The name of the element.</param>
        </member>
        <member name="T:IdleOfTheAgesLib.Models.ModJsonData.VisisbleDataElement">
            <summary>
            A base class for data elements that are visible to the user.
            </summary>
        </member>
        <member name="P:IdleOfTheAgesLib.Models.ModJsonData.VisisbleDataElement.TranslationKey">
            <summary>
            Gets the translation key of the element.
            </summary>
        </member>
        <member name="P:IdleOfTheAgesLib.Models.ModJsonData.VisisbleDataElement.SortingOrder">
            <summary>
            Gets or sets the Age that this age should be after.
            </summary>
        </member>
        <member name="M:IdleOfTheAgesLib.Models.ModJsonData.VisisbleDataElement.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:IdleOfTheAgesLib.Models.ModJsonData.VisisbleDataElement"/> class.
            </summary>
        </member>
        <member name="M:IdleOfTheAgesLib.Models.ModJsonData.VisisbleDataElement.#ctor(System.String,System.String,System.String,System.String,IdleOfTheAgesLib.Models.ModJsonData.SortingOrderData)">
            <summary>
            Initializes a new instance of the <see cref="T:IdleOfTheAgesLib.Models.ModJsonData.VisisbleDataElement"/> class.
            </summary>
            <param name="namespace">The namespace of the element.</param>
            <param name="id">The ID of the element.</param>
            <param name="name">The name of the element.</param>
            <param name="translationKey">The translation key of the element.</param>
            <param name="sortingOrder">The sorting order of the element.</param>
        </member>
        <member name="T:IdleOfTheAgesLib.Models.ModJsonData.ThumbnailDataElement">
            <summary>
            A base class for data elements that are visible to the user and have a thumbnail.
            </summary>
        </member>
        <member name="P:IdleOfTheAgesLib.Models.ModJsonData.ThumbnailDataElement.Thumbnail">
            <summary>
            Gets the thumbnail ID of the object.
            </summary>
        </member>
        <member name="M:IdleOfTheAgesLib.Models.ModJsonData.ThumbnailDataElement.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:IdleOfTheAgesLib.Models.ModJsonData.ThumbnailDataElement"/> class.
            </summary>
        </member>
        <member name="M:IdleOfTheAgesLib.Models.ModJsonData.ThumbnailDataElement.#ctor(System.String,System.String,System.String,System.String,IdleOfTheAgesLib.Models.ModJsonData.SortingOrderData,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IdleOfTheAgesLib.Models.ModJsonData.ThumbnailDataElement"/> class.
            </summary>
            <param name="namespace">The namespace of the element.</param>
            <param name="id">The ID of the element.</param>
            <param name="name">The name of the element.</param>
            <param name="translationKey">The translation key of the element.</param>
            <param name="sortingOrder">The sorting order of the element.</param>
            <param name="thumbnail">The thumbnail for the element.</param>
        </member>
        <member name="T:IdleOfTheAgesLib.Models.ModJsonData.ItemData">
            <summary>
            An item that can be obtained in the game.
            </summary>
        </member>
        <member name="P:IdleOfTheAgesLib.Models.ModJsonData.ItemData.DescriptionKey">
            <summary>
            Gets the key to the description of the item.
            </summary>
        </member>
        <member name="P:IdleOfTheAgesLib.Models.ModJsonData.ItemData.SellPrice">
            <summary>
            Gets the sell price of this item.
            </summary>
        </member>
        <member name="P:IdleOfTheAgesLib.Models.ModJsonData.ItemData.Metadata">
            <summary>
            Gets metadata for this item.
            </summary>
        </member>
        <member name="P:IdleOfTheAgesLib.Models.ModJsonData.ItemData.Category">
            <summary>
            Gets the category of this item.
            <para>This is used for searching.</para>
            </summary>
        </member>
        <member name="P:IdleOfTheAgesLib.Models.ModJsonData.ItemData.Type">
            <summary>
            Gets the type of item this is.
            <para>This is used for searching.</para>
            </summary>
        </member>
        <member name="P:IdleOfTheAgesLib.Models.ModJsonData.ItemData.RequiredForCompletion">
            <summary>
            Gets a value indicating whether whether this item is required for completing the game.
            </summary>
        </member>
        <member name="P:IdleOfTheAgesLib.Models.ModJsonData.ItemData.Tag">
            <summary>
            Gets the item's tag. This indicates what type of item it is and is used for things such as storage and equipping.
            </summary>
        </member>
        <member name="M:IdleOfTheAgesLib.Models.ModJsonData.ItemData.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:IdleOfTheAgesLib.Models.ModJsonData.ItemData"/> class.
            </summary>
        </member>
        <member name="M:IdleOfTheAgesLib.Models.ModJsonData.ItemData.#ctor(System.String,System.String,System.String,System.String,IdleOfTheAgesLib.Models.ModJsonData.SortingOrderData,System.String,System.String,System.Int32,System.Collections.Generic.Dictionary{System.String,System.Object},System.String,System.String,System.Boolean,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IdleOfTheAgesLib.Models.ModJsonData.ItemData"/> class.
            </summary>
            <param name="namespace">The namespace of the element.</param>
            <param name="id">The ID of the element.</param>
            <param name="name">The name of the element.</param>
            <param name="translationKey">The translation key of the element.</param>
            <param name="sortingOrder">The sorting order of the element.</param>
            <param name="thumbnail">The thumbnail for the element.</param>
            <param name="descriptionKey">The description key of the item.</param>
            <param name="sellPrice">The sell price of the item.</param>
            <param name="metadata">The metadata of the item.</param>
            <param name="category">The category of the item.</param>
            <param name="type">The type of the item.</param>
            <param name="requiredForCompletion">Whether or not the item is required to consider the game "completed".</param>
            <param name="tag">The tags of the item.</param>
        </member>
        <member name="T:IdleOfTheAgesLib.Models.ModJsonData.PageData">
            <summary>
            Represents a page in the <see cref="T:IdleOfTheAgesLib.Models.ModJsonData.PageGroupData"/>.
            </summary>
        </member>
        <member name="T:IdleOfTheAgesLib.Models.ModJsonData.PageData.PageTypeValues">
            <summary>
            The type of pages available.
            </summary>
        </member>
        <member name="F:IdleOfTheAgesLib.Models.ModJsonData.PageData.PageTypeValues.None">
            <summary>
            Default value.
            </summary>
        </member>
        <member name="F:IdleOfTheAgesLib.Models.ModJsonData.PageData.PageTypeValues.Skill">
            <summary>
            The page goes to a skill.
            </summary>
        </member>
        <member name="P:IdleOfTheAgesLib.Models.ModJsonData.PageData.PageType">
            <summary>
            Gets the type of page this is.
            </summary>
        </member>
        <member name="P:IdleOfTheAgesLib.Models.ModJsonData.PageData.TargetID">
            <summary>
            Gets the ID of the target behind the page.
            </summary>
        </member>
        <member name="P:IdleOfTheAgesLib.Models.ModJsonData.PageData.PageGroup">
            <summary>
            Gets the ID of the page group this page belongs to.
            </summary>
        </member>
        <member name="M:IdleOfTheAgesLib.Models.ModJsonData.PageData.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:IdleOfTheAgesLib.Models.ModJsonData.PageData"/> class.
            </summary>
        </member>
        <member name="M:IdleOfTheAgesLib.Models.ModJsonData.PageData.#ctor(System.String,System.String,System.String,System.String,IdleOfTheAgesLib.Models.ModJsonData.SortingOrderData,System.String,IdleOfTheAgesLib.Models.ModJsonData.PageData.PageTypeValues,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IdleOfTheAgesLib.Models.ModJsonData.PageData"/> class.
            </summary>
            <param name="namespace">The namespace of the element.</param>
            <param name="id">The ID of the element.</param>
            <param name="name">The name of the element.</param>
            <param name="translationKey">The translation key of the element.</param>
            <param name="sortingOrder">The sorting order of the element.</param>
            <param name="thumbnail">The thumbnail for the element.</param>
            <param name="pageType">The type of page this is.</param>
            <param name="targetID">The ID of the target behind the page.</param>
            <param name="pageGroup">The Id of the page group this page belongs to.</param>
        </member>
        <member name="T:IdleOfTheAgesLib.Models.ModJsonData.PageGroupData">
            <summary>
            Data for page groups in the sidebar.
            </summary>
        </member>
        <member name="M:IdleOfTheAgesLib.Models.ModJsonData.PageGroupData.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:IdleOfTheAgesLib.Models.ModJsonData.PageGroupData"/> class.
            </summary>
        </member>
        <member name="M:IdleOfTheAgesLib.Models.ModJsonData.PageGroupData.#ctor(System.String,System.String,System.String,System.String,IdleOfTheAgesLib.Models.ModJsonData.SortingOrderData)">
            <summary>
            Initializes a new instance of the <see cref="T:IdleOfTheAgesLib.Models.ModJsonData.PageGroupData"/> class.
            </summary>
            <param name="namespace">The namespace of the element.</param>
            <param name="id">The ID of the element.</param>
            <param name="name">The name of the element.</param>
            <param name="translationKey">The translation key of the element.</param>
            <param name="sortingOrder">The sorting order of the element.</param>
        </member>
        <member name="T:IdleOfTheAgesLib.Models.ModJsonData.SkillCategoryData">
            <summary>
            A category a skill can be a part of.
            </summary>
        </member>
        <member name="M:IdleOfTheAgesLib.Models.ModJsonData.SkillCategoryData.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:IdleOfTheAgesLib.Models.ModJsonData.SkillCategoryData"/> class.
            </summary>
        </member>
        <member name="M:IdleOfTheAgesLib.Models.ModJsonData.SkillCategoryData.#ctor(System.String,System.String,System.String,System.String,IdleOfTheAgesLib.Models.ModJsonData.SortingOrderData,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IdleOfTheAgesLib.Models.ModJsonData.SkillCategoryData"/> class.
            </summary>
            <param name="namespace">The namespace of the element.</param>
            <param name="id">The ID of the element.</param>
            <param name="name">The name of the element.</param>
            <param name="translationKey">The translation key of the element.</param>
            <param name="sortingOrder">The sorting order of the element.</param>
            <param name="thumbnail">The thumbnail for the element.</param>
        </member>
        <member name="T:IdleOfTheAgesLib.Models.ModJsonData.SkillData">
            <summary>
            Represents the data for a skill that is being added.
            </summary>
        </member>
        <member name="P:IdleOfTheAgesLib.Models.ModJsonData.SkillData.SkillCategory">
            <summary>
            Gets the skill category this Skill falls under.
            </summary>
        </member>
        <member name="P:IdleOfTheAgesLib.Models.ModJsonData.SkillData.UnlockAge">
            <summary>
            Gets the age in which this skill is unlocked.
            </summary>
        </member>
        <member name="P:IdleOfTheAgesLib.Models.ModJsonData.SkillData.SkillUI">
            <summary>
            Gets the ID of the skill's UI class.
            </summary>
        </member>
        <member name="P:IdleOfTheAgesLib.Models.ModJsonData.SkillData.PageGroup">
            <summary>
            Gets the page group the skill should be filed under.
            </summary>
        </member>
        <member name="M:IdleOfTheAgesLib.Models.ModJsonData.SkillData.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:IdleOfTheAgesLib.Models.ModJsonData.SkillData"/> class.
            </summary>
        </member>
        <member name="M:IdleOfTheAgesLib.Models.ModJsonData.SkillData.#ctor(System.String,System.String,System.String,System.String,IdleOfTheAgesLib.Models.ModJsonData.SortingOrderData,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IdleOfTheAgesLib.Models.ModJsonData.SkillData"/> class.
            </summary>
            <param name="namespace">The namespace of the element.</param>
            <param name="id">The ID of the element.</param>
            <param name="name">The name of the element.</param>
            <param name="translationKey">The translation key of the element.</param>
            <param name="sortingOrder">The sorting order of the element.</param>
            <param name="thumbnail">The thumbnail for the element.</param>
            <param name="skillCategory">The skill category this skill falls under.</param>
            <param name="unlockAge">The age in which this skill is unlocked.</param>
            <param name="skillUI">The ID of the skill's UI class.</param>
            <param name="pageGroup">The page group this skill should be filed under.</param>
        </member>
        <member name="T:IdleOfTheAgesLib.Models.ModJsonData.SortingOrderData">
            <summary>
            Allows for sorting elements in different ways.
            <para>Elements that use <see cref="P:IdleOfTheAgesLib.Models.ModJsonData.SortingOrderData.After"/> are considered as having the same <see cref="P:IdleOfTheAgesLib.Models.ModJsonData.SortingOrderData.Order"/> as the element they are referring.</para>
            </summary>
        </member>
        <member name="P:IdleOfTheAgesLib.Models.ModJsonData.SortingOrderData.After">
            <summary>
            Gets the element that should precede this element.
            </summary>
        </member>
        <member name="P:IdleOfTheAgesLib.Models.ModJsonData.SortingOrderData.Order">
            <summary>
            Gets a numeric value of where this element should be sorted.
            </summary>
        </member>
        <member name="M:IdleOfTheAgesLib.Models.ModJsonData.SortingOrderData.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:IdleOfTheAgesLib.Models.ModJsonData.SortingOrderData"/> class.
            </summary>
        </member>
        <member name="M:IdleOfTheAgesLib.Models.ModJsonData.SortingOrderData.#ctor(System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:IdleOfTheAgesLib.Models.ModJsonData.SortingOrderData"/> class.
            </summary>
            <param name="after">The lement that should precede this element.</param>
            <param name="order">The numeric value of where this element should be stored.</param>
        </member>
        <member name="T:IdleOfTheAgesLib.Models.ModData">
            <summary>
            The data class is used for defining mod gameplay data.
            </summary>
        </member>
        <member name="P:IdleOfTheAgesLib.Models.ModData.Namespace">
            <summary>
            Gets the namespace the data sits in.
            </summary>
        </member>
        <member name="P:IdleOfTheAgesLib.Models.ModData.Ages">
            <summary>
            Gets the ages that the mod adds.
            </summary>
        </member>
        <member name="P:IdleOfTheAgesLib.Models.ModData.SkillCategories">
            <summary>
            Gets the skill categories that the mod adds.
            </summary>
        </member>
        <member name="P:IdleOfTheAgesLib.Models.ModData.Skills">
            <summary>
            Gets the skills that the mod adds.
            </summary>
        </member>
        <member name="P:IdleOfTheAgesLib.Models.ModData.PageGroups">
            <summary>
            Gets the page groups that the mod adds.
            </summary>
        </member>
        <member name="P:IdleOfTheAgesLib.Models.ModData.Pages">
            <summary>
            Gets the pages that the mod adds.
            </summary>
        </member>
        <member name="T:IdleOfTheAgesLib.Data.ModManifest">
            <summary>
            The data object of a mod's manifest.json.
            </summary>
        </member>
        <member name="P:IdleOfTheAgesLib.Data.ModManifest.Namespace">
            <summary>
            Gets or sets the namespace of a mod.
            </summary>
        </member>
        <member name="P:IdleOfTheAgesLib.Data.ModManifest.Thumbnail">
            <summary>
            Gets or sets the path to the mod's thumbnail.
            </summary>
        </member>
        <member name="P:IdleOfTheAgesLib.Data.ModManifest.ModClass">
            <summary>
            Gets or sets the name of the mod class.
            </summary>
        </member>
        <member name="P:IdleOfTheAgesLib.Data.ModManifest.Dependencies">
            <summary>
            Gets or sets the dependencies of this mod.
            </summary>
        </member>
        <member name="T:IdleOfTheAgesLib.Result">
            <summary>
            A result object that can be returned with information.
            </summary>
        </member>
        <member name="M:IdleOfTheAgesLib.Result.#ctor(System.Boolean,System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:IdleOfTheAgesLib.Result"/> class.
            </summary>
            <param name="value">Whether or not the call was a success.</param>
            <param name="errorReason">The reason the call failed.</param>
            <param name="exception">The exception that was thrown.</param>
        </member>
        <member name="M:IdleOfTheAgesLib.Result.op_Implicit(IdleOfTheAgesLib.Result)~System.Boolean">
            <summary>
            Implicitly casts a <see cref="T:IdleOfTheAgesLib.Result"/> object to a <see cref="T:System.Boolean"/>.
            </summary>
            <param name="result">The result object to cast.</param>
            <exception cref="T:System.InvalidOperationException">Thrown if the <paramref name="result"/> object is <see langword="null"/>.</exception>
        </member>
        <member name="M:IdleOfTheAgesLib.Result.op_Implicit(System.Boolean)~IdleOfTheAgesLib.Result">
            <summary>
            Implicitly casts a <see cref="T:System.Boolean"/> value to a <see cref="T:IdleOfTheAgesLib.Result"/>.
            </summary>
            <param name="value">The bool value to cast.</param>
        </member>
        <member name="M:IdleOfTheAgesLib.Result.op_Implicit(System.ValueTuple{System.Boolean,System.String})~IdleOfTheAgesLib.Result">
            <summary>
            Implicitly casts a <see cref="T:System.Tuple`2"/> of a <see cref="T:System.Boolean"/> value and a <see cref="T:System.String"/> value to a <see cref="T:IdleOfTheAgesLib.Result"/> value.
            </summary>
            <param name="value">The tuple object to cast.</param>
        </member>
        <member name="M:IdleOfTheAgesLib.Result.op_Implicit(System.ValueTuple{System.Boolean,System.String,System.Exception})~IdleOfTheAgesLib.Result">
            <summary>
            Implicitly casts a <see cref="T:System.Tuple`3"/> of a <see cref="T:System.Boolean"/> value, a <see cref="T:System.String"/> value, and an <see cref="T:System.Exception"/> object to a <see cref="T:IdleOfTheAgesLib.Result`1"/>.
            </summary>
            <param name="value">The tuple object to cast.</param>
        </member>
        <member name="T:IdleOfTheAgesLib.Result`1">
            <summary>
            A result object that can be returned with information.
            </summary>
            <typeparam name="T">The type of the object that is encased in this object.</typeparam>
        </member>
        <member name="P:IdleOfTheAgesLib.Result`1.Value">
            <summary>
            Gets the target object.
            </summary>
        </member>
        <member name="P:IdleOfTheAgesLib.Result`1.ErrorReason">
            <summary>
            Gets the reason a function call failed.
            </summary>
        </member>
        <member name="P:IdleOfTheAgesLib.Result`1.Exception">
            <summary>
            Gets the Exception that was thrown.
            </summary>
        </member>
        <member name="M:IdleOfTheAgesLib.Result`1.#ctor(`0,System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:IdleOfTheAgesLib.Result`1"/> class.
            </summary>
            <param name="value">The target object.</param>
            <param name="errorReason">The reason the call failed.</param>
            <param name="exception">The exception that was thrown.</param>
        </member>
        <member name="M:IdleOfTheAgesLib.Result`1.ThrowIfInvalid">
            <summary>
            Throws an exception if the <see cref="T:IdleOfTheAgesLib.Result`1"/> object is in an invalid state.
            </summary>
            <exception cref="T:System.Exception">Thrown if the object is not in a valid state and no exception was provided.</exception>
        </member>
        <member name="M:IdleOfTheAgesLib.Result`1.op_Implicit(IdleOfTheAgesLib.Result{`0})~System.Boolean">
            <summary>
            Implicitly casts a <see cref="T:IdleOfTheAgesLib.Result`1"/> object to a bool.
            <para>This returns <see langword="true"/> if the call was successful, and <see langword="false"/> if something went wrong.</para>
            </summary>
            <param name="result">The result object to cast.</param>
            <exception cref="T:System.InvalidOperationException">Thrown if the <paramref name="result"/> object is <see langword="null"/>.</exception>
        </member>
        <member name="M:IdleOfTheAgesLib.Result`1.op_Implicit(IdleOfTheAgesLib.Result{`0})~`0">
            <summary>
            Implicitly casts a <see cref="T:IdleOfTheAgesLib.Result`1"/> object to a <typeparamref name="T"/>.
            </summary>
            <param name="result">The result object to cast.</param>
            <exception cref="T:System.InvalidOperationException">Thrown if the <paramref name="result"/> object is <see langword="null"/>.</exception>
            <exception cref="P:IdleOfTheAgesLib.Result`1.Exception">Thrown if the <see cref="P:IdleOfTheAgesLib.Result`1.Exception"/> is not <see langword="null"/>.</exception>
        </member>
        <member name="M:IdleOfTheAgesLib.Result`1.op_Implicit(`0)~IdleOfTheAgesLib.Result{`0}">
            <summary>
            Implicitly casts a <typeparamref name="T"/> value to a <see cref="T:IdleOfTheAgesLib.Result`1"/>.
            </summary>
            <param name="value">The bool value to cast.</param>
        </member>
        <member name="M:IdleOfTheAgesLib.Result`1.op_Implicit(System.ValueTuple{`0,System.String})~IdleOfTheAgesLib.Result{`0}">
            <summary>
            Implicitly casts a <see cref="T:System.Tuple`2"/> of a <typeparamref name="T"/> value and a <see cref="T:System.String"/> value to a <see cref="T:IdleOfTheAgesLib.Result"/> value to a <see cref="T:IdleOfTheAgesLib.Result`1"/>.
            </summary>
            <param name="value">The tuple object to cast.</param>
        </member>
        <member name="M:IdleOfTheAgesLib.Result`1.op_Implicit(System.ValueTuple{`0,System.String,System.Exception})~IdleOfTheAgesLib.Result{`0}">
            <summary>
            Implicitly casts a <see cref="T:System.Tuple`3"/> of a <typeparamref name="T"/> value, a <see cref="T:System.String"/> value, and an <see cref="P:IdleOfTheAgesLib.Result`1.Exception"/> object to a <see cref="T:IdleOfTheAgesLib.Result`1"/>.
            </summary>
            <param name="value">The tuple object to cast.</param>
        </member>
        <member name="T:IdleOfTheAgesLib.IDataLoader">
            <summary>
            Allows for loading in <see cref="T:IdleOfTheAgesLib.Models.ModData"/> objects.
            </summary>
        </member>
        <member name="M:IdleOfTheAgesLib.IDataLoader.LoadData(System.String[])">
            <summary>
            Loads in a <see cref="T:IdleOfTheAgesLib.Models.ModData"/> object from the mod folder.
            </summary>
            <param name="pathSegments">The path to the json file.</param>
            <returns>A <see cref="T:IdleOfTheAgesLib.Result"/> object to check if the call was successful.</returns>
        </member>
        <member name="M:IdleOfTheAgesLib.IDataLoader.RegisterTextures(System.String[])">
            <summary>
            Registers textures from this mod to the game.
            </summary>
            <param name="pathSegments">The root path.</param>
            <returns>A <see cref="T:IdleOfTheAgesLib.Result"/> object to check if the call was successful.</returns>
        </member>
        <member name="M:IdleOfTheAgesLib.IDataLoader.LoadLanguages(System.String[])">
            <summary>
            Loads the language files in the given path.
            </summary>
            <param name="pathSegments">The path the language files are located at.</param>
            <returns>A <see cref="T:IdleOfTheAgesLib.Result"/> object to check if the call was successful.</returns>
        </member>
        <member name="T:IdleOfTheAgesLib.IModLibrary">
            <summary>
            Contains all mods that have been loaded.
            </summary>
        </member>
        <member name="M:IdleOfTheAgesLib.IModLibrary.RegisterMod(System.String,IdleOfTheAgesLib.IModObject)">
            <summary>
            Registers a mod to the mod library.
            </summary>
            <param name="namespace">The namespace of the mod.</param>
            <param name="modObject">The mod object.</param>
            <returns>A <see cref="T:IdleOfTheAgesLib.Result"/> object to check if the call was successful.</returns>
        </member>
        <member name="M:IdleOfTheAgesLib.IModLibrary.ModExists(System.String)">
            <summary>
            Checks whether a mod with the specified <paramref name="namespace"/> exists.
            </summary>
            <param name="namespace">The namespace to check for.</param>
            <returns>A <see cref="T:IdleOfTheAgesLib.Result"/> object to check if the call was successful.</returns>
        </member>
        <member name="M:IdleOfTheAgesLib.IModLibrary.GetModObject(System.String)">
            <summary>
            Gets the mod object of a mod.
            </summary>
            <param name="namespace">The namespace of the mod to get the mod object for.</param>
            <returns>The requested mod object.</returns>
        </member>
        <member name="M:IdleOfTheAgesLib.IModLibrary.GetAllMods">
            <summary>
            Gets all the mods that are currently registered.
            </summary>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1"/> with all the currently registered mods.</returns>
        </member>
        <member name="T:IdleOfTheAgesLib.Skills.IAgeService">
            <summary>
            A service that holds all the ages that exist.
            </summary>
        </member>
        <member name="M:IdleOfTheAgesLib.Skills.IAgeService.RegisterAge(IdleOfTheAgesLib.Models.ModJsonData.AgeData)">
            <summary>
            Registers an age that he player can reach.
            <para>If a later age is set to be after the same age as this age, that age will precede this age.</para>
            <para>The namespace field will be filled in automatically.</para>
            </summary>
            <param name="age">The age to register.</param>
            <returns>A <see cref="T:IdleOfTheAgesLib.Result"/> object to check if the call was successful.</returns>
        </member>
        <member name="T:IdleOfTheAgesLib.Skills.ISkillService">
            <summary>
            A service that keeps track of all available skills.
            </summary>
        </member>
        <member name="P:IdleOfTheAgesLib.Skills.ISkillService.CurrentlyShowingSkill">
            <summary>
            Gets the skill that should be shown.
            </summary>
        </member>
        <member name="E:IdleOfTheAgesLib.Skills.ISkillService.CurrentlyShowingSkillChangedEvent">
            <summary>
            An event that is fired when the currently showing skill changes.
            </summary>
        </member>
        <member name="M:IdleOfTheAgesLib.Skills.ISkillService.RegisterSkillData(IdleOfTheAgesLib.Models.ModJsonData.SkillData)">
            <summary>
            Registers the skill data for a skill to the game.
            </summary>
            <param name="skillData">The skill data to register.</param>
            <returns>A <see cref="T:IdleOfTheAgesLib.Result"/> object to check if the call was successful.</returns>
        </member>
        <member name="M:IdleOfTheAgesLib.Skills.ISkillService.RegisterSkillImplementation``1(System.String)">
            <summary>
            Registers the implementation for a skill to the game.
            </summary>
            <typeparam name="TSkill">The type of the skill to register.</typeparam>
            <param name="skillID">The ID of the skill.</param>
            <returns>A <see cref="T:IdleOfTheAgesLib.Result"/> object to check if the call was successful.</returns>
        </member>
        <member name="M:IdleOfTheAgesLib.Skills.ISkillService.RegisterSkillImplementation(System.Type,System.String)">
            <summary>
            Registers the implementation for a skill to the game.
            </summary>
            <param name="skillType">The type of the skill to register.</param>
            <param name="skillID">The ID of the skill.</param>
            <returns>A <see cref="T:IdleOfTheAgesLib.Result"/> object to check if the call was successful.</returns>
        </member>
        <member name="M:IdleOfTheAgesLib.Skills.ISkillService.GetSkill``1(System.String)">
            <summary>
            Gets a skill implementation.
            </summary>
            <typeparam name="TSkill">The type of the skill to get.</typeparam>
            <param name="skillID">The ID of the skill to get.</param>
            <returns>The requested skill.</returns>
        </member>
        <member name="M:IdleOfTheAgesLib.Skills.ISkillService.GetSkills">
            <summary>
            Gets all skills currently registered in the game.
            </summary>
            <returns>The skills currently registered in the game.</returns>
        </member>
        <member name="M:IdleOfTheAgesLib.Skills.ISkillService.ChangeShowingSkill(System.String)">
            <summary>
            Changes the skill that is being shown.
            </summary>
            <param name="skillID">The ID of the skill that should be shown.</param>
            <returns>A <see cref="T:IdleOfTheAgesLib.Result"/> object to check if the call was successful.</returns>
        </member>
        <member name="T:IdleOfTheAgesLib.Skills.ModifierCalculationType">
            <summary>
            An enum that is used to indicate what type of calculations should be done with percentage values to calculate the final modifier time.
            </summary>
        </member>
        <member name="F:IdleOfTheAgesLib.Skills.ModifierCalculationType.Additive">
            <summary>
            The percentages should be added together.
            </summary>
        </member>
        <member name="F:IdleOfTheAgesLib.Skills.ModifierCalculationType.Multiplicative">
            <summary>
            The percentages should be multiplied together.
            </summary>
        </member>
        <member name="T:IdleOfTheAgesLib.Skills.ModifierData">
            <summary>
            Data that modifies certain stats within the game.
            </summary>
        </member>
        <member name="P:IdleOfTheAgesLib.Skills.ModifierData.ModifierSource">
            <summary>
            Gets the source of the modification data.
            </summary>
        </member>
        <member name="P:IdleOfTheAgesLib.Skills.ModifierData.ModifierTarget">
            <summary>
            Gets the target stat this modifier is affecting.
            </summary>
        </member>
        <member name="P:IdleOfTheAgesLib.Skills.ModifierData.FlatModifier">
            <summary>
            Gets or sets the flat modifier that should be applied.
            </summary>
        </member>
        <member name="P:IdleOfTheAgesLib.Skills.ModifierData.PercentModifier">
            <summary>
            Gets or sets the percent modifier that shouldbe applied.
            </summary>
        </member>
        <member name="M:IdleOfTheAgesLib.Skills.ModifierData.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IdleOfTheAgesLib.Skills.ModifierData"/> class.
            </summary>
            <param name="modifierSource">The source of the modification data.</param>
            <param name="modifierTarget">The target stat this modifier is affecting.</param>
        </member>
        <member name="T:IdleOfTheAgesLib.Skills.ModifierOrder">
            <summary>
            An enum that is used to indicate in what order the modifiers should be applied.
            </summary>
        </member>
        <member name="F:IdleOfTheAgesLib.Skills.ModifierOrder.FlatFirst">
            <summary>
            The <see cref="P:IdleOfTheAgesLib.Skills.ModifierData.FlatModifier"/> should be applied first.
            </summary>
        </member>
        <member name="F:IdleOfTheAgesLib.Skills.ModifierOrder.PercentageFirst">
            <summary>
            The <see cref="P:IdleOfTheAgesLib.Skills.ModifierData.PercentModifier"/> should be applied first.
            </summary>
        </member>
        <member name="T:IdleOfTheAgesLib.Skills.SkillAttribute">
            <summary>
            Indicates that a class is a <see cref="T:IdleOfTheAgesLib.Skills.SkillImplementation"/>.
            </summary>
        </member>
        <member name="P:IdleOfTheAgesLib.Skills.SkillAttribute.SkillID">
            <summary>
            Gets the ID of the skill this class is implementing.
            </summary>
        </member>
        <member name="M:IdleOfTheAgesLib.Skills.SkillAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IdleOfTheAgesLib.Skills.SkillAttribute"/> class.
            </summary>
            <param name="skillID">The ID of the skill.</param>
        </member>
        <member name="T:IdleOfTheAgesLib.Skills.SkillImplementation">
            <summary>
            A skill that can be practiced by the player.
            </summary>
        </member>
        <member name="P:IdleOfTheAgesLib.Skills.SkillImplementation.Namespace">
            <summary>
            Gets the namespace the skill exists in.
            </summary>
        </member>
        <member name="P:IdleOfTheAgesLib.Skills.SkillImplementation.SkillData">
            <summary>
            Gets the data for the skill.
            </summary>
        </member>
        <member name="P:IdleOfTheAgesLib.Skills.SkillImplementation.CurrentSkillLevel">
            <summary>
            Gets or sets the current level of the skill.
            </summary>
        </member>
        <member name="P:IdleOfTheAgesLib.Skills.SkillImplementation.MaxSkillLevel">
            <summary>
            Gets the maximum level of this skill.
            </summary>
        </member>
        <member name="P:IdleOfTheAgesLib.Skills.SkillImplementation.NamespacedID">
            <summary>
            Gets the skill's namespaced ID.
            </summary>
        </member>
        <member name="P:IdleOfTheAgesLib.Skills.SkillImplementation.SkillUI">
            <summary>
            Gets the type of this class's skill UI <see cref="T:IdleOfTheAgesLib.UI.Elements.Element"/>.
            </summary>
        </member>
        <member name="M:IdleOfTheAgesLib.Skills.SkillImplementation.#ctor(IdleOfTheAgesLib.Models.ModJsonData.SkillData)">
            <summary>
            Initializes a new instance of the <see cref="T:IdleOfTheAgesLib.Skills.SkillImplementation"/> class.
            </summary>
            <param name="skillData">The json data for the skill.</param>
        </member>
        <member name="M:IdleOfTheAgesLib.Skills.SkillImplementation.Initialize(IdleOfTheAgesLib.DependencyInjection.IServiceLibrary)">
            <summary>
            Initializes the skill.
            </summary>
            <param name="serviceLibrary">The service library to obtain services from.</param>
        </member>
        <member name="T:IdleOfTheAgesLib.Translation.ITranslationService">
            <summary>
            Allows for translation of text.
            </summary>
        </member>
        <member name="P:IdleOfTheAgesLib.Translation.ITranslationService.CurrentLanguage">
            <summary>
            Gets the currently selected language.
            </summary>
        </member>
        <member name="E:IdleOfTheAgesLib.Translation.ITranslationService.LanguageChangedEvent">
            <summary>
            An event that gets fired when the language is changed.
            </summary>
        </member>
        <member name="M:IdleOfTheAgesLib.Translation.ITranslationService.ChangeLanguage(IdleOfTheAgesLib.Translation.Language)">
            <summary>
            Changes the language of the game.
            </summary>
            <param name="language">The new game language.</param>
            <returns>A <see cref="T:IdleOfTheAgesLib.Result"/> object to check if the call was successful.</returns>
        </member>
        <member name="M:IdleOfTheAgesLib.Translation.ITranslationService.GetLanguageString(System.String)">
            <summary>
            Gets the language string for the given key.
            </summary>
            <param name="key">The key to translate.</param>
            <returns>The requested language string.</returns>
        </member>
        <member name="M:IdleOfTheAgesLib.Translation.ITranslationService.LoadLanguagePath(IdleOfTheAgesLib.Translation.Language,System.String)">
            <summary>
            Loads the path of the memory file for the language into memory so it can be read if the language is needed.
            </summary>
            <param name="language">The language the file is for.</param>
            <param name="path">The path to the file.</param>
            <returns>A <see cref="T:IdleOfTheAgesLib.Result"/> object to check if the call was successful.</returns>
        </member>
        <member name="T:IdleOfTheAgesLib.Translation.Language">
            <summary>
            A list of languages the game supports.
            </summary>
        </member>
        <member name="F:IdleOfTheAgesLib.Translation.Language.None">
            <summary>
            Default case
            </summary>
        </member>
        <member name="F:IdleOfTheAgesLib.Translation.Language.EN_US">
            <summary>
            American English
            </summary>
        </member>
        <member name="F:IdleOfTheAgesLib.Translation.Language.NL_NL">
            <summary>
            Dutch
            </summary>
        </member>
        <member name="T:IdleOfTheAgesLib.UI.ElementInteracter`1">
            <summary>
            Allows for interacting with an <see cref="P:IdleOfTheAgesLib.UI.ElementInteracter`1.Element"/>.
            </summary>
            <typeparam name="T">The type of the <see cref="P:IdleOfTheAgesLib.UI.ElementInteracter`1.Element"/> this interactor should interact with.</typeparam>
        </member>
        <member name="P:IdleOfTheAgesLib.UI.ElementInteracter`1.Element">
            <summary>
            Gets the element we are interacting with.
            </summary>
        </member>
        <member name="P:IdleOfTheAgesLib.UI.ElementInteracter`1.TargetStartPosition">
            <summary>
            Gets the start position in world space of the element when dragging started.
            </summary>
        </member>
        <member name="P:IdleOfTheAgesLib.UI.ElementInteracter`1.PointerStartPosition">
            <summary>
            Gets the start position of the pointer in world space when dragging started.
            </summary>
        </member>
        <member name="P:IdleOfTheAgesLib.UI.ElementInteracter`1.PointerPreviousPosition">
            <summary>
            Gets the position of the pointer at the previous frame.
            </summary>
        </member>
        <member name="P:IdleOfTheAgesLib.UI.ElementInteracter`1.PointerStartDelta">
            <summary>
            Gets the change in pointer position from when the dragging started.
            </summary>
        </member>
        <member name="P:IdleOfTheAgesLib.UI.ElementInteracter`1.PointerFrameDelta">
            <summary>
            Gets the change in pointer position from the last frame.
            </summary>
        </member>
        <member name="M:IdleOfTheAgesLib.UI.ElementInteracter`1.#ctor(`0)">
            <summary>
            Initializes a new instance of the <see cref="T:IdleOfTheAgesLib.UI.ElementInteracter`1"/> class.
            </summary>
            <param name="target">The element we interact with.</param>
        </member>
        <member name="M:IdleOfTheAgesLib.UI.ElementInteracter`1.RegisterCallbacksOnTarget">
            <inheritdoc/>
        </member>
        <member name="M:IdleOfTheAgesLib.UI.ElementInteracter`1.UnregisterCallbacksFromTarget">
            <inheritdoc/>
        </member>
        <member name="M:IdleOfTheAgesLib.UI.ElementInteracter`1.OnPointerDown(UnityEngine.UIElements.PointerDownEvent)">
            <summary>
            Called when dragging starts.
            </summary>
            <param name="args">The arguments of the event.</param>
        </member>
        <member name="M:IdleOfTheAgesLib.UI.ElementInteracter`1.OnPointerMove(UnityEngine.UIElements.PointerMoveEvent)">
            <summary>
            Called when the pointer moves while dragging.
            </summary>
            <param name="args">The arguments of the event.</param>
        </member>
        <member name="M:IdleOfTheAgesLib.UI.ElementInteracter`1.OnPointerUp(UnityEngine.UIElements.PointerUpEvent)">
            <summary>
            Called when dragging ends.
            </summary>
            <param name="args">The arguments of the event.</param>
        </member>
        <member name="T:IdleOfTheAgesLib.UI.Elements.Element">
            <summary>
            Base class for building a visual element container.
            </summary>
        </member>
        <member name="P:IdleOfTheAgesLib.UI.Elements.Element.ChildElements">
            <summary>
            Gets the child elements of this element.
            </summary>
        </member>
        <member name="M:IdleOfTheAgesLib.UI.Elements.Element.AddElement(IdleOfTheAgesLib.UI.Elements.Element)">
            <summary>
            Adds a child element to this element.
            </summary>
            <param name="element">The element to add.</param>
        </member>
        <member name="M:IdleOfTheAgesLib.UI.Elements.Element.InsertElement(IdleOfTheAgesLib.UI.Elements.Element,System.Int32)">
            <summary>
            Inserts a child element into this element.
            </summary>
            <param name="element">The element to add.</param>
            <param name="index">Where to insert the element.</param>
        </member>
        <member name="M:IdleOfTheAgesLib.UI.Elements.Element.GetVisualElement">
            <inheritdoc/>
        </member>
        <member name="M:IdleOfTheAgesLib.UI.Elements.Element.ApplyManipulator(UnityEngine.UIElements.IManipulator)">
            <summary>
            Applies a <see cref="T:UnityEngine.UIElements.IManipulator"/> on the <see cref="T:UnityEngine.UIElements.VisualElement"/>.
            </summary>
            <param name="manipulator">The <see cref="T:UnityEngine.UIElements.IManipulator"/> to apply.</param>
        </member>
        <member name="M:IdleOfTheAgesLib.UI.Elements.Element.RebuildVisualElement">
            <inheritdoc/>
        </member>
        <member name="T:IdleOfTheAgesLib.UI.Elements.Element`2">
            <summary>
            Base class for building a visual element container.
            </summary>
            <typeparam name="TElement">The type of the <see cref="T:UnityEngine.UIElements.VisualElement"/> this element should create.</typeparam>
            <typeparam name="TDataModel">The type of the data model this element needs to render correctly.</typeparam>
        </member>
        <member name="P:IdleOfTheAgesLib.UI.Elements.Element`2.Data">
            <summary>
            Gets the data for the visual element.
            </summary>
        </member>
        <member name="M:IdleOfTheAgesLib.UI.Elements.Element`2.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:IdleOfTheAgesLib.UI.Elements.Element`2"/> class.
            </summary>
        </member>
        <member name="M:IdleOfTheAgesLib.UI.Elements.Element`2.InjectData(`1)">
            <inheritdoc/>
        </member>
        <member name="M:IdleOfTheAgesLib.UI.Elements.Element`2.GetVisualElement">
            <inheritdoc/>
        </member>
        <member name="M:IdleOfTheAgesLib.UI.Elements.Element`2.ApplyManipulator(UnityEngine.UIElements.IManipulator)">
            <inheritdoc/>
        </member>
        <member name="M:IdleOfTheAgesLib.UI.Elements.Element`2.RebuildVisualElement">
            <inheritdoc/>
        </member>
        <member name="M:IdleOfTheAgesLib.UI.Elements.Element`2.TranslateElement(UnityEngine.Vector3)">
            <summary>
            Translates the element based on its <see cref="P:UnityEngine.UIElements.VisualElement.transform"/>.
            </summary>
            <param name="translation">How much to move it.</param>
        </member>
        <member name="M:IdleOfTheAgesLib.UI.Elements.Element`2.BuildElement(`0)">
            <summary>
            Internal rebuild function that returns the target visual element generically.
            </summary>
            <param name="targetElement">The <see cref="T:UnityEngine.UIElements.VisualElement"/> we are building.</param>
        </member>
        <member name="M:IdleOfTheAgesLib.UI.Elements.Element`2.RegisterCallback``1(UnityEngine.UIElements.EventCallback{``0})">
            <summary>
            Registers a callback to the target element.
            </summary>
            <typeparam name="TEventType">The type of event to register to.</typeparam>
            <param name="callback">The callback that should be fired.</param>
        </member>
        <member name="M:IdleOfTheAgesLib.UI.Elements.Element`2.UnregisterCallback``1(UnityEngine.UIElements.EventCallback{``0})">
            <summary>
            Unregisters a callback from the target element.
            </summary>
            <typeparam name="TEventType">The type of event to unregister from.</typeparam>
            <param name="callback">The callback that should be removed.</param>
        </member>
        <member name="T:IdleOfTheAgesLib.UI.Elements.IElement">
            <summary>
            Base class for building a visual element container.
            </summary>
        </member>
        <member name="M:IdleOfTheAgesLib.UI.Elements.IElement.GetVisualElement">
            <summary>
            Rebuilds the element and its child elements.
            <para>This function breaks down and rebuilds from the ground up when called.</para>
            </summary>
            <returns>Returns its <see cref="T:UnityEngine.UIElements.VisualElement"/> to show.</returns>
        </member>
        <member name="M:IdleOfTheAgesLib.UI.Elements.IElement.RebuildVisualElement">
            <summary>
            Rebuilds the visual element.
            </summary>
        </member>
        <member name="T:IdleOfTheAgesLib.UI.Elements.IElement`1">
            <summary>
            Base class for building a visual element container that requires initialization.
            </summary>
            <typeparam name="TDataModel">The type of the data model.</typeparam>
        </member>
        <member name="M:IdleOfTheAgesLib.UI.Elements.IElement`1.InjectData(`0)">
            <summary>
            Injects the element with its data model.
            </summary>
            <param name="data">The data the model needs to build itself.</param>
        </member>
        <member name="T:IdleOfTheAgesLib.UI.Elements.IGameViewElement">
            <summary>
            The element for the main game view.
            </summary>
        </member>
        <member name="T:IdleOfTheAgesLib.UI.Elements.IPageGroupElement">
            <summary>
            An element that renders a group of <see cref="T:IdleOfTheAgesLib.UI.Elements.IPageItemElement"/>s.
            </summary>
        </member>
        <member name="T:IdleOfTheAgesLib.UI.Elements.IPageItemElement">
            <summary>
            An element that represents a page item within a <see cref="T:IdleOfTheAgesLib.UI.Elements.IPageListElement"/>.
            </summary>
        </member>
        <member name="E:IdleOfTheAgesLib.UI.Elements.IPageItemElement.PageItemClickedEvent">
            <summary>
            An event that gets fired when the page item is clicked on by the user.
            </summary>
        </member>
        <member name="T:IdleOfTheAgesLib.UI.Elements.IPageListElement">
            <summary>
            An element that represents a page list in the sidebar with <see cref="T:IdleOfTheAgesLib.UI.Elements.IPageGroupElement"/>s.
            </summary>
        </member>
        <member name="T:IdleOfTheAgesLib.UI.Elements.ISidebarElement">
            <summary>
            The sidebar element of the game.
            </summary>
        </member>
        <member name="T:IdleOfTheAgesLib.UI.Elements.ISkillSidebarElement">
            <summary>
            Represents a skill element in the sidebar menu.
            </summary>
        </member>
        <member name="E:IdleOfTheAgesLib.UI.Elements.ISkillSidebarElement.SkillClickedEvent">
            <summary>
            Invoked when the user clicks on the side bar element.
            <para>The parameter is the ID of the skill that got clicked on.</para>
            </summary>
        </member>
        <member name="T:IdleOfTheAgesLib.UI.Elements.ISkillView">
            <summary>
            Represents the skill view element.
            </summary>
        </member>
        <member name="T:IdleOfTheAgesLib.UI.Elements.UIElementAttribute">
            <summary>
            Indicates that the class creates <see cref="T:IdleOfTheAgesLib.UI.Elements.Element"/>s.
            </summary>
        </member>
        <member name="P:IdleOfTheAgesLib.UI.Elements.UIElementAttribute.ElementInterface">
            <summary>
            Gets the type of the interface this element implements.
            </summary>
        </member>
        <member name="P:IdleOfTheAgesLib.UI.Elements.UIElementAttribute.Key">
            <summary>
            Gets the key to identify this class implementation.
            </summary>
        </member>
        <member name="M:IdleOfTheAgesLib.UI.Elements.UIElementAttribute.#ctor(System.Type,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IdleOfTheAgesLib.UI.Elements.UIElementAttribute"/> class.
            </summary>
            <param name="elementInterface">The type of the interface this element implements.</param>
            <param name="key">The key to identify this class implementation.</param>
        </member>
        <member name="T:IdleOfTheAgesLib.UI.Managers.IGamePageManager">
            <summary>
            Represents a manager for game pages.
            </summary>
        </member>
        <member name="T:IdleOfTheAgesLib.UI.Managers.IGameViewManager">
            <summary>
            Represents a manager for the <see cref="T:IdleOfTheAgesLib.UI.Elements.IGameViewElement"/>.
            </summary>
        </member>
        <member name="T:IdleOfTheAgesLib.UI.Managers.IPageGroupManager">
            <summary>
            Manages the <see cref="T:IdleOfTheAgesLib.UI.Elements.IPageGroupElement"/>.
            </summary>
        </member>
        <member name="M:IdleOfTheAgesLib.UI.Managers.IPageGroupManager.InjectPageGroup(IdleOfTheAgesLib.Models.ModJsonData.PageGroupData)">
            <summary>
            Injects Page Group Data into the manager.
            </summary>
            <param name="pageGroupData">The page group data this manager should manage.</param>
        </member>
        <member name="T:IdleOfTheAgesLib.UI.Managers.IPageItemManager">
            <summary>
            Manages the <see cref="T:IdleOfTheAgesLib.UI.Elements.IPageItemElement"/>.
            </summary>
        </member>
        <member name="E:IdleOfTheAgesLib.UI.Managers.IPageItemManager.PageItemClickedEvent">
            <summary>
            An event that gets fired when the item gets clicked on.
            </summary>
        </member>
        <member name="M:IdleOfTheAgesLib.UI.Managers.IPageItemManager.InjectPageData(IdleOfTheAgesLib.Models.ModJsonData.PageData)">
            <summary>
            Injects Page Data into the manager.
            </summary>
            <param name="page">The page data this manager should manage.</param>
        </member>
        <member name="T:IdleOfTheAgesLib.UI.Managers.IPageListManager">
            <summary>
            Manages the <see cref="T:IdleOfTheAgesLib.UI.Elements.IPageListElement"/>.
            </summary>
        </member>
        <member name="T:IdleOfTheAgesLib.UI.Managers.ISidebarManager">
            <summary>
            Represents a manager for the <see cref="T:IdleOfTheAgesLib.UI.Elements.ISidebarElement"/>.
            </summary>
        </member>
        <member name="T:IdleOfTheAgesLib.UI.Managers.ISkillSidebarManager">
            <summary>
            Represents a manager for the <see cref="T:IdleOfTheAgesLib.UI.Elements.ISkillSidebarElement"/>.
            </summary>
        </member>
        <member name="T:IdleOfTheAgesLib.UI.Managers.IUIManager">
            <summary>
            A UI Factory that creates and manages.
            </summary>
        </member>
        <member name="M:IdleOfTheAgesLib.UI.Managers.IUIManager.GetElement">
            <summary>
            Gets the UI Element this manager is managing.
            </summary>
            <returns>The UI Element this manager is managing.</returns>
        </member>
        <member name="T:IdleOfTheAgesLib.UI.Managers.IUIManager`1">
            <summary>
            A UI Factory that creates and manages.
            </summary>
            <typeparam name="TElement">The type of the element the manager is managing.</typeparam>
        </member>
        <member name="M:IdleOfTheAgesLib.UI.Managers.IUIManager`1.GetElement">
            <summary>
            Gets the UI Element this manager is managing.
            </summary>
            <returns>The UI Element this manager is managing.</returns>
        </member>
        <member name="T:IdleOfTheAgesLib.UI.Managers.UIManagerAttribute">
            <summary>
            Indicates that a class is an UI <see cref="T:IdleOfTheAgesLib.UI.Elements.Element"/>.
            </summary>
        </member>
        <member name="P:IdleOfTheAgesLib.UI.Managers.UIManagerAttribute.ManagerInterfaceType">
            <summary>
            Gets the type of the element this manager manages.
            </summary>
        </member>
        <member name="P:IdleOfTheAgesLib.UI.Managers.UIManagerAttribute.Identifier">
            <summary>
            Gets the identifier of the UI attribute.
            </summary>
        </member>
        <member name="M:IdleOfTheAgesLib.UI.Managers.UIManagerAttribute.#ctor(System.Type,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IdleOfTheAgesLib.UI.Managers.UIManagerAttribute"/> class.
            </summary>
            <param name="managerInterfaceType">The type of the manager interface this manager implements.</param>
            <param name="identifier">The identifier of the attribute.</param>
        </member>
        <member name="T:IdleOfTheAgesLib.UI.Models.GameViewModel">
            <summary>
            Contains data for the game view model.
            </summary>
        </member>
        <member name="P:IdleOfTheAgesLib.UI.Models.GameViewModel.SidebarElement">
            <summary>
            Gets the sidebar element.
            </summary>
        </member>
        <member name="P:IdleOfTheAgesLib.UI.Models.GameViewModel.PageElement">
            <summary>
            Gets the page to render to the user.
            </summary>
        </member>
        <member name="M:IdleOfTheAgesLib.UI.Models.GameViewModel.#ctor(IdleOfTheAgesLib.UI.Elements.IPageListElement,IdleOfTheAgesLib.UI.Elements.IElement)">
            <summary>
            Initializes a new instance of the <see cref="T:IdleOfTheAgesLib.UI.Models.GameViewModel"/> class.
            </summary>
            <param name="sidebarElement">The page list to render in the sidebar.</param>
            <param name="pageElement">The page to render.</param>
        </member>
        <member name="T:IdleOfTheAgesLib.UI.Models.PageGroupModel">
            <summary>
            Contains data needed to render a <see cref="T:IdleOfTheAgesLib.UI.Elements.IPageGroupElement"/>.
            </summary>
        </member>
        <member name="P:IdleOfTheAgesLib.UI.Models.PageGroupModel.Pages">
            <summary>
            Gets the pages that are in this group.
            </summary>
        </member>
        <member name="M:IdleOfTheAgesLib.UI.Models.PageGroupModel.#ctor(System.Collections.Generic.IReadOnlyList{IdleOfTheAgesLib.UI.Elements.IPageItemElement})">
            <summary>
            Initializes a new instance of the <see cref="T:IdleOfTheAgesLib.UI.Models.PageGroupModel"/> class.
            </summary>
            <param name="pages">The pages to instantiate.</param>
        </member>
        <member name="T:IdleOfTheAgesLib.UI.Models.PageItemModel">
            <summary>
            Contains data to render a <see cref="T:IdleOfTheAgesLib.UI.Elements.IPageItemElement"/>.
            </summary>
        </member>
        <member name="P:IdleOfTheAgesLib.UI.Models.PageItemModel.Text">
            <summary>
            Gets the text to display for the page.
            </summary>
        </member>
        <member name="P:IdleOfTheAgesLib.UI.Models.PageItemModel.Thumbnail">
            <summary>
            Gets the thumbnail to display for the page.
            </summary>
        </member>
        <member name="M:IdleOfTheAgesLib.UI.Models.PageItemModel.#ctor(System.String,UnityEngine.Texture2D)">
            <summary>
            Initializes a new instance of the <see cref="T:IdleOfTheAgesLib.UI.Models.PageItemModel"/> class.
            </summary>
            <param name="text">The text to display for the page.</param>
            <param name="thumbnail">The thumbnail to display for the page.</param>
        </member>
        <member name="T:IdleOfTheAgesLib.UI.Models.PageListModel">
            <summary>
            Contains data to render a <see cref="T:IdleOfTheAgesLib.UI.Elements.IPageListElement"/>.
            </summary>
        </member>
        <member name="P:IdleOfTheAgesLib.UI.Models.PageListModel.PageGroups">
            <summary>
            Gets the <see cref="T:IdleOfTheAgesLib.UI.Elements.IPageGroupElement"/>s to display.
            </summary>
        </member>
        <member name="M:IdleOfTheAgesLib.UI.Models.PageListModel.#ctor(System.Collections.Generic.IReadOnlyList{IdleOfTheAgesLib.UI.Elements.IPageGroupElement})">
            <summary>
            Initializes a new instance of the <see cref="T:IdleOfTheAgesLib.UI.Models.PageListModel"/> class.
            </summary>
            <param name="pageGroups">The <see cref="T:IdleOfTheAgesLib.UI.Elements.IPageGroupElement"/>s to display.</param>
        </member>
        <member name="T:IdleOfTheAgesLib.UI.Models.SidebarElementModel">
            <summary>
            Contains data for the <see cref="T:IdleOfTheAgesLib.UI.Elements.ISidebarElement"/> to initialize itself.
            </summary>
        </member>
        <member name="P:IdleOfTheAgesLib.UI.Models.SidebarElementModel.SkillElements">
            <summary>
            Gets the skill elements to render in the sidebar.
            </summary>
        </member>
        <member name="M:IdleOfTheAgesLib.UI.Models.SidebarElementModel.#ctor(System.Collections.Generic.IReadOnlyCollection{IdleOfTheAgesLib.UI.Elements.ISkillSidebarElement})">
            <summary>
            Initializes a new instance of the <see cref="T:IdleOfTheAgesLib.UI.Models.SidebarElementModel"/> class.
            </summary>
            <param name="skillElements">The skill elements to render in the sidebar.</param>
        </member>
        <member name="T:IdleOfTheAgesLib.UI.Models.SkillSidebarModel">
            <summary>
            Contains the data required to render the <see cref="T:IdleOfTheAgesLib.UI.Elements.ISkillSidebarElement"/>.
            </summary>
        </member>
        <member name="P:IdleOfTheAgesLib.UI.Models.SkillSidebarModel.SkillDisplayText">
            <summary>
            Gets or sets the translated display text of the skill.
            </summary>
        </member>
        <member name="P:IdleOfTheAgesLib.UI.Models.SkillSidebarModel.SkillID">
            <summary>
            Gets or sets the ID of the skill.
            </summary>
        </member>
        <member name="P:IdleOfTheAgesLib.UI.Models.SkillSidebarModel.SkillThumbnail">
            <summary>
            Gets or sets the thumbnail for the skill.
            </summary>
        </member>
        <member name="P:IdleOfTheAgesLib.UI.Models.SkillSidebarModel.SkillLevel">
            <summary>
            Gets or sets the current level of the skill.
            </summary>
        </member>
        <member name="P:IdleOfTheAgesLib.UI.Models.SkillSidebarModel.SkillMaxLevel">
            <summary>
            Gets or sets the maximum level of the skill.
            </summary>
        </member>
        <member name="T:IdleOfTheAgesLib.UI.IElementLibrary">
            <summary>
            A library that registers UI Elements so they can be used by <see cref="T:IdleOfTheAgesLib.UI.Managers.IUIManager"/>s.
            </summary>
        </member>
        <member name="M:IdleOfTheAgesLib.UI.IElementLibrary.RegisterElement``2(System.String)">
            <summary>
            Registers an element to the library.
            </summary>
            <typeparam name="TInterface">The interface of the element to register.</typeparam>
            <typeparam name="TElement">The type of the element to register.</typeparam>
            <param name="key">The key of the element.</param>
            <returns>A <see cref="T:IdleOfTheAgesLib.Result"/> object to check if the call was successful.</returns>
        </member>
        <member name="M:IdleOfTheAgesLib.UI.IElementLibrary.RegisterElement(System.Type,System.Type,System.String)">
            <summary>
            Registers an element to the library.
            </summary>
            <param name="interfaceType">The type of the interface of the element to register.</param>
            <param name="elementType">The type of the element to register.</param>
            <param name="key">The key of the element.</param>
            <returns>A <see cref="T:IdleOfTheAgesLib.Result"/> object to check if the call was successful.</returns>
        </member>
        <member name="M:IdleOfTheAgesLib.UI.IElementLibrary.GetElement``1(System.String)">
            <summary>
            Gets the element registered for the provided interface.
            </summary>
            <typeparam name="TElement">The interface to get the element for.</typeparam>
            <param name="key">The key the element is stored under.</param>
            <returns>The requested element.</returns>
        </member>
        <member name="M:IdleOfTheAgesLib.UI.IElementLibrary.GetElement(System.Type,System.String)">
            <summary>
            Gets the element registered for the provided interface.
            </summary>
            <param name="interfaceType">The interface to get the element for.</param>
            <param name="key">The key the element is stored under.</param>
            <returns>The requested element.</returns>
        </member>
        <member name="T:IdleOfTheAgesLib.UI.IPageService">
            <summary>
            A service to keep track of the <see cref="T:IdleOfTheAgesLib.Models.ModJsonData.PageGroupData"/>s and <see cref="T:IdleOfTheAgesLib.Models.ModJsonData.PageData"/>s in the sidebar.
            </summary>
        </member>
        <member name="P:IdleOfTheAgesLib.UI.IPageService.ActivePage">
            <summary>
            Gets the ID of the page that is currently active.
            </summary>
        </member>
        <member name="E:IdleOfTheAgesLib.UI.IPageService.OnPageChangedEvent">
            <summary>
            An even that gets fired when the <see cref="P:IdleOfTheAgesLib.UI.IPageService.ActivePage"/> is changed.
            </summary>
        </member>
        <member name="M:IdleOfTheAgesLib.UI.IPageService.RegisterPageGroup(IdleOfTheAgesLib.Models.ModJsonData.PageGroupData)">
            <summary>
            Registers a <see cref="T:IdleOfTheAgesLib.Models.ModJsonData.PageGroupData"/>.
            </summary>
            <param name="pageGroup">The <see cref="T:IdleOfTheAgesLib.Models.ModJsonData.PageGroupData"/> to register.</param>
            <returns>A <see cref="T:IdleOfTheAgesLib.Result"/> object to check if the call was successful.</returns>
        </member>
        <member name="M:IdleOfTheAgesLib.UI.IPageService.RegisterPage(IdleOfTheAgesLib.Models.ModJsonData.PageData)">
            <summary>
            Registers a <see cref="T:IdleOfTheAgesLib.Models.ModJsonData.PageData"/>.
            </summary>
            <param name="page">The <see cref="T:IdleOfTheAgesLib.Models.ModJsonData.PageData"/> to register.</param>
            <returns>A <see cref="T:IdleOfTheAgesLib.Result"/> object to check if the call was successful.</returns>
        </member>
        <member name="M:IdleOfTheAgesLib.UI.IPageService.GetAllPageGroups">
            <summary>
            Gets all registered <see cref="T:IdleOfTheAgesLib.Models.ModJsonData.PageGroupData"/>.
            </summary>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1"/> with all <see cref="T:IdleOfTheAgesLib.Models.ModJsonData.PageGroupData"/>.</returns>
        </member>
        <member name="M:IdleOfTheAgesLib.UI.IPageService.GetPagesInPageGroup(System.String)">
            <summary>
            Gets all registered <see cref="T:IdleOfTheAgesLib.Models.ModJsonData.PageData"/> within a <see cref="T:IdleOfTheAgesLib.Models.ModJsonData.PageGroupData"/>.
            </summary>
            <param name="pageGroupID">The ID of the page group to get the pages in.</param>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1"/> with all <see cref="T:IdleOfTheAgesLib.Models.ModJsonData.PageData"/> in the <see cref="T:IdleOfTheAgesLib.Models.ModJsonData.PageGroupData"/>.</returns>
        </member>
        <member name="M:IdleOfTheAgesLib.UI.IPageService.GetPageGroup(System.String)">
            <summary>
            Gets a <see cref="T:IdleOfTheAgesLib.Models.ModJsonData.PageGroupData"/>.
            </summary>
            <param name="pageGroupID">The <see cref="T:IdleOfTheAgesLib.Models.ModJsonData.PageGroupData"/> to obtain.</param>
            <returns>The requested <see cref="T:IdleOfTheAgesLib.Models.ModJsonData.PageGroupData"/>.</returns>
        </member>
        <member name="M:IdleOfTheAgesLib.UI.IPageService.GetPage(System.String)">
            <summary>
            Gets a <see cref="T:IdleOfTheAgesLib.Models.ModJsonData.PageData"/>.
            </summary>
            <param name="pageID">The <see cref="T:IdleOfTheAgesLib.Models.ModJsonData.PageData"/> to obtain.</param>
            <returns>The requested <see cref="T:IdleOfTheAgesLib.Models.ModJsonData.PageData"/>.</returns>
        </member>
        <member name="M:IdleOfTheAgesLib.UI.IPageService.ChangeActivePage(System.String)">
            <summary>
            Changes the active page that the user is viewing.
            </summary>
            <param name="pageId">The ID of the page that should become active.</param>
            <returns>Whether or not changing the page was successful.</returns>
        </member>
        <member name="T:IdleOfTheAgesLib.UI.IStyleService">
            <summary>
            A service to hold all the style sheets.
            </summary>
        </member>
        <member name="M:IdleOfTheAgesLib.UI.IStyleService.AddStyle(System.String,System.String)">
            <summary>
            Adds a style to the collection.
            </summary>
            <param name="identifier">The identifier of the style.</param>
            <param name="json">The style in json format.</param>
            <returns>A <see cref="T:IdleOfTheAgesLib.Result"/> object to check if the call was successful.</returns>
        </member>
        <member name="M:IdleOfTheAgesLib.UI.IStyleService.GetStyle(System.String)">
            <summary>
            Gets a style based on it's identifier.
            </summary>
            <param name="style">The style to request.</param>
            <returns>The requested style.</returns>
        </member>
        <member name="T:IdleOfTheAgesLib.UI.ITextureLibrary">
            <summary>
            A texture library where textures are loaded into.
            </summary>
        </member>
        <member name="M:IdleOfTheAgesLib.UI.ITextureLibrary.RegisterTextures(System.String,System.String)">
            <summary>
            Registers textures within a root folder.
            </summary>
            <param name="textureID">The namespaced ID of the texture.</param>
            <param name="path">The path to the texture.</param>
            <returns>A <see cref="T:IdleOfTheAgesLib.Result"/> object to check if the call was successful.</returns>
        </member>
        <member name="M:IdleOfTheAgesLib.UI.ITextureLibrary.GetTexture(System.String)">
            <summary>
            Gets a registered texture, loading it in if it's the first time it is requested.
            </summary>
            <param name="textureID">The texture to obtain.</param>
            <returns>The requested texture.</returns>
        </member>
        <member name="T:IdleOfTheAgesLib.UI.IUIManagerService">
            <summary>
            A service to keep track of the <see cref="T:IdleOfTheAgesLib.UI.Managers.IUIManager"/> instances.
            </summary>
        </member>
        <member name="M:IdleOfTheAgesLib.UI.IUIManagerService.RegisterManager``2(System.String)">
            <summary>
            Registers a <see cref="T:IdleOfTheAgesLib.UI.Managers.IUIManager"/>.
            </summary>
            <typeparam name="TManagerInterface">The type of the UI manager interface.</typeparam>
            <typeparam name="TManagerImplementation">The type of the UI manager implementation.</typeparam>
            <param name="key">The key to get the specific manager.</param>
            <returns>A <see cref="T:IdleOfTheAgesLib.Result"/> object to check if the call was successful.</returns>
        </member>
        <member name="M:IdleOfTheAgesLib.UI.IUIManagerService.RegisterManager(System.Type,System.Type,System.String)">
            <summary>
            Registers a <see cref="T:IdleOfTheAgesLib.UI.Managers.IUIManager"/>.
            </summary>
            <param name="managerInterfaceType">The type of the UI manager interface.</param>
            <param name="managerImplementationType">The type of the UI manager implementation.</param>
            <param name="key">The key to get the specific manager.</param>
            <returns>A <see cref="T:IdleOfTheAgesLib.Result"/> object to check if the call was successful.</returns>
        </member>
        <member name="M:IdleOfTheAgesLib.UI.IUIManagerService.GetManager``1(System.String,System.String)">
            <summary>
            Gets the UI manager for the specific UI element.
            </summary>
            <typeparam name="TManager">The type of the manager to get.</typeparam>
            <param name="instanceIdentifier">The identifier for the instance to get.</param>
            <param name="key">The key to the specific manager.</param>
            <returns>The requested UI Manager.</returns>
        </member>
        <member name="M:IdleOfTheAgesLib.UI.IUIManagerService.GetManager(System.Type,System.String,System.String)">
            <summary>
            Gets the UI manager for the specific UI element.
            </summary>
            <param name="managerType">The type of the manager to get.</param>
            <param name="instanceIdentifier">The identifier for the instance to get.</param>
            <param name="key">The key to the specific manager.</param>
            <returns>The requested UI Manager.</returns>
        </member>
        <member name="T:IdleOfTheAgesLib.UI.IUIService">
            <summary>
            A service to interact with the UI elements that exist.
            </summary>
        </member>
        <member name="M:IdleOfTheAgesLib.UI.IUIService.GetRoot">
            <summary>
            Gets the root <see cref="T:IdleOfTheAgesLib.UI.Elements.Element"/>.
            </summary>
            <returns>The root UI element of the game.</returns>
        </member>
        <member name="M:IdleOfTheAgesLib.UI.IUIService.AddElement(IdleOfTheAgesLib.UI.Elements.Element,System.String)">
            <summary>
            Adds an element to the UI Service that has been spawned to the screen.
            </summary>
            <param name="element">The element that was added.</param>
            <param name="identifier">The unique identifier of the element.</param>
            <returns>A <see cref="T:IdleOfTheAgesLib.Result"/> object to check if the call was successful.</returns>
        </member>
        <member name="M:IdleOfTheAgesLib.UI.IUIService.GetElement``1(System.String)">
            <summary>
            Gets an element that has been spawned.
            </summary>
            <typeparam name="TElement">The type of the element to obtain.</typeparam>
            <param name="identifier">The unique identifier of the element.</param>
            <returns>The requested element.</returns>
        </member>
        <member name="M:IdleOfTheAgesLib.UI.IUIService.GetElement(System.String)">
            <summary>
            Gets an element that has been spawned.
            </summary>
            <param name="identifier">The unique identifier of the element.</param>
            <returns>The requested element.</returns>
        </member>
        <member name="T:IdleOfTheAgesLib.UI.Styles.IStyleEntry">
            <summary>
            Represents a style entry that contains style data for <see cref="T:IdleOfTheAgesLib.UI.Elements.Element"/>s.
            </summary>
        </member>
        <member name="M:IdleOfTheAgesLib.UI.Styles.IStyleEntry.ApplyToStyle(UnityEngine.UIElements.IStyle)">
            <summary>
            Applies the entries's styles to the <paramref name="style"/>.
            </summary>
            <param name="style">The style to apply this entries's styles to.</param>
        </member>
        <member name="T:IdleOfTheAgesLib.User.IPlayerService">
            <summary>
            A service that holds all relevant information about the player.
            <para>For information about the player, see <see cref="T:IdleOfTheAgesLib.User.IUserService"/>.</para>
            </summary>
        </member>
        <member name="T:IdleOfTheAgesLib.User.IUserService">
            <summary>
            A service that holds all relevant information about the user.
            <para>For information about the player, see <see cref="T:IdleOfTheAgesLib.User.IPlayerService"/>.</para>
            </summary>
        </member>
    </members>
</doc>
